// NewEvent Plug-in
// Initial code generated by Softimage SDK Wizard
// Executed Fri Apr 29 00:05:10 UTC+0200 2011 by StefanKubicek


function XSILoadPlugin( in_reg )
{
	in_reg.Author = "StefanKubicek";
	in_reg.Name = "QMenuRememberRecentNode";
	in_reg.Major = 1;
	in_reg.Minor = 0;

	in_reg.RegisterEvent("QMenuRememberRecentNodeEvent", siOnBeginCommand);
	in_reg.RegisterCommand( "QMenuGetRecentNode" , "QMenuGetRecentNode" );
	
	//RegistrationInsertionPoint - do not remove this line

	return true;
}

function XSIUnloadPlugin( in_reg )
{
	var strPluginName;
	strPluginName = in_reg.Name;
	Application.LogMessage(strPluginName + " has been unloaded.",siVerbose);
	return true;
}


// Callback for the QMenuRecordMRUNodes event.
function QMenuRememberRecentNodeEvent_OnEvent( in_ctxt )
{
	//Application.LogMessage("QMenuRememberRecentNodeEvent_OnEvent called",siVerbose);
	var LastCmd = in_ctxt.GetAttribute("Command");
	//Application.LogMessage("Command: " + in_ctxt.GetAttribute("Command").Name,siVerbose);

	ScriptingName = LastCmd.ScriptingName;
	//Application.LogMessage("Last Commands Name " + LastCmd.Name);
	//Application.LogMessage("Last Commands Scripting Name " + ScriptingName);
	
	//if ScriptingName != "" 
	//{
		if (ScriptingName == "AddICENode")
		{
			//Application.LogMessage("Argument 0  is: " && LastCmd.Arguments.Item(0).Value);
			var strLastNodeCommandAndArgument = (ScriptingName + ";" + LastCmd.Arguments.Item(0).Value);
			Application.Plugins("QMenuRememberRecentNode").UserData = strLastNodeCommandAndArgument;
			//Application.LogMessage (strLastNodeCommandAndArgument);
		}
		else if (ScriptingName == "AddICECompoundNode")
		{
			//Application.LogMessage("Argument 0  is: " && LastCmd.Arguments.Item(0).Value);
			var strLastNodeCommandAndArgument = (ScriptingName + ";" + LastCmd.Arguments.Item(0).Value);
			Application.Plugins("QMenuRememberRecentNode").UserData = strLastNodeCommandAndArgument;
			//Application.LogMessage (strLastNodeCommandAndArgument);
		}
		
		else if (ScriptingName == "CreateShaderFromProgID")
		{
			//Application.LogMessage("Argument 0  is: " && LastCmd.Arguments.Item(0).Value);
			var strLastNodeCommandAndArgument = (ScriptingName + ";" + LastCmd.Arguments.Item(0).Value);
			Application.Plugins("QMenuRememberRecentNode").UserData = strLastNodeCommandAndArgument;
			//Application.LogMessage (strLastNodeCommandAndArgument);
		}

	
// 	This event can be aborted by returning true or false if you don't want to abort.
	return false;
}

function QMenuGetRecentNode_Execute()
{
	//thisPlugin = Application.Plugins("QMenuRememberRecentNode");
	return Application.Plugins("QMenuRememberRecentNode").UserData;
}

/*
function getGlobalObject ( in_VariableName )
{
	//if len(in_VariableName) == 0:
		//Print("Invalid argument to getGlobalObject", c.siError)

	dic = getDictionary()
	
	if in_VariableName in dic:
		return dic[in_VariableName]
	else:
		return None
}

function setGlobalObject( in_VariableName, in_Value ):

	//if len(in_VariableName) == 0:
		//Print("Invalid argument to setGlobalObject", c.siError)

	dic = getDictionary()		
	dic[in_VariableName] = in_Value		

function getDictionary()
{
	thisPlugin = Application.Plugins("QMenuConfigurator")
	if thisPlugin.UserData == None:
		# Create the dictionary on the fly.  Once created
		# it will remain active as long as Softimage is running.
		# (Unless you manually Unload or Reload this plugin)

		var dict = Scripting.Dictionary;
		thisPlugin.UserData = dict

	g_dictionary = thisPlugin.UserData
	return g_dictionary
}
*/