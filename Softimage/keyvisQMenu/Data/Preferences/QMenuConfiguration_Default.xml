<?xml version="1.0" ?><QMenuComponents QMenu_Version="0.9"><QMenu_MenuItems><QMenu_MenuItem UID="{EB15754C-7A52-44D9-B59F-41070D905CF5}" category="Preferences" language="Python" name="Extrude duplicated Polygons" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	if Application.Preferences.GetPreferenceValue(&quot;duplicate.polygons&quot;) == 1:
		return True
	return False

def Switch_Execute( oContext ): #Don't rename this function
	Application.SetValue (&quot;Preferences.duplicate.polygons&quot;, not Switch_Init( oContext ))</QMenu_MenuItem><QMenu_MenuItem UID="{46267565-BA0C-44A2-A33F-2AF1AFC304A5}" category="Property Editing" language="Python" name="+10%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*1.1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*1.1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C399B8D4-B91E-4D5E-9385-F8F5AF0450D3}" category="Property Editing" language="Python" name="+50%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*1.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*1.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{286F754B-32B0-4C7E-A75C-9753016142C3}" category="Property Editing" language="Python" name="+100%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*2,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*2,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{FD71AA8E-48D8-4215-875B-F9F903D7F7C2}" category="Property Editing" language="Python" name="-10%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*0.9,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*0.9,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{346AA952-D8BB-4A03-B0A0-176E5AEE66BA}" category="Property Editing" language="Python" name="-50%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*0.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*0.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{288C84F4-4BF5-4D04-83D0-8203F6F405E7}" category="Property Editing" language="Python" name="0,1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0.1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0.1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C3514F58-B7B0-4FC8-86D2-C70F7AC930FD}" category="Property Editing" language="Python" name="0,5" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{813F017E-F53C-4EAA-B761-E944CF1F26AB}" category="Property Editing" language="Python" name="1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,1,&quot;&quot;)
							
						</QMenu_MenuItem><QMenu_MenuItem UID="{FC12502E-8647-4844-A3DB-A7A8D45DFBBC}" category="Property Editing" language="Python" name="5" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{94C709A4-4374-4CE2-97AF-081B0BC620E0}" category="Property Editing" language="Python" name="10" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,10,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,10,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{202E185A-E1CF-4668-AE08-A44032DCDB53}" category="Property Editing" language="Python" name="0" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{89CE70BA-A68F-4E93-97A8-9B0DEDE855A3}" category="Polygon Modeling" language="Python" name="Weld Points to COG" switch="False" type="QMenu_MenuItem">def Script_Execute( oContext ): #Don't rename this function
	Application.ApplyTopoOp(&quot;WeldPoints&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{E4E1B3B6-CE12-4977-9809-46809D1AF092}" category="Preferences" language="Python" name="Raycast Select in Shaded Mode" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ):
	if Application.Preferences.GetPreferenceValue(&quot;Select.rectraycast&quot;) == 1:
		return True
	return False


def Switch_Execute( oContext ):
	Application.SetValue(&quot;preferences.Select.rectraycast&quot;, not Switch_Init(self, QMenu_MenuItems, QMenu_Menus, QMenu_MenuSets))
</QMenu_MenuItem><QMenu_MenuItem UID="{5FAD87DA-CE63-47A3-B295-3972B8EAA597}" category="Views" language="Python" name="Top View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Top\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{7D65E2C7-423B-414D-9426-76734FC40086}" category="Preferences" language="Python" name="Raycast Select - Include Backfacing Polygons" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ):
	if Application.Preferences.GetPreferenceValue(&quot;Select.raycastbackfacing&quot;) == 1:
		return True
	return False

def Switch_Execute( oContext ):
	Application.SetValue(&quot;preferences.Select.raycastbackfacing&quot;, not Switch_Init(self, QMenu_MenuItems, QMenu_Menus, QMenu_MenuSets))
</QMenu_MenuItem><QMenu_MenuItem UID="{48BDD8C1-E7B2-40A6-A4EC-080C14C6EA6C}" category="Preferences" language="Python" name="Orbit Around Selection" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) == 2
	return State

def Switch_Execute( oContext ): #Don't rename this function

	if Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) != 2:
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 2, &quot;&quot;)
	else: 
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 0, &quot;&quot;)


</QMenu_MenuItem><QMenu_MenuItem UID="{289FBBA6-DD49-4D59-BA6E-D4231712FBB9}" category="Preferences" language="Python" name="Orbit Around Selection - Components only" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) == 1
	return State

def Switch_Execute( oContext ): #Don't rename this function
	if Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) != 1:
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 1, &quot;&quot;)
	else: 
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 0, &quot;&quot;)




</QMenu_MenuItem><QMenu_MenuItem UID="{52974071-B7DB-4EE6-A21C-FBBC322FE711}" category="Polygon Modeling" language="Python" name="Cap" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.LogMessage(&quot;Sorry, the Cap script item is WIP and not yet functional&quot;)
	#Weld selected points towards their common center
	#Application.ApplyTopoOp(&quot;WeldPoints&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{D53C3B05-02F2-4899-B532-B953A4C59136}" category="Clusters Editing" language="Python" name="Merge Clusters with same Material" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	Sel = Application.Selection
	oSel = list()
	for Obj in Sel:
		oSel.append(Obj)
	 
	 
	for oObj in oSel:
		delClusters = list()
		Clusters = oObj.ActivePrimitive.Geometry.Clusters
		polyClusters = list()
		for oCluster in Clusters:
			if oCluster.Type == &quot;poly&quot; and len(oCluster.Elements) != 0:
				polyClusters.append (oCluster)
	 
		
		for polyCluster in polyClusters:
			currentmat = polyCluster.Material
			#pplication.LogMessage(currentmat)

			for oCheckCluster in polyClusters:
				if oCheckCluster != polyCluster and len(oCheckCluster.Elements) != 0:
					if oCheckCluster.Material.IsEqualTo(polyCluster.Material):
						#Application.LogMessage(&quot;Processing cluster: &quot; + oCheckCluster.name)
						clusterElements = oCheckCluster.Elements
						Application.DeselectAll()
						Application.SelectMembers(oCheckCluster.FullName,True,False)
						Application.AddToSelection(polyCluster.FullName,&quot;ASITIS&quot;,False)
						Application.AddToCluster(&quot;&quot;, &quot;siRemoveFromExistingClusters&quot;)
		
		
		for Cluster in oObj.ActivePrimitive.Geometry.Clusters:
			if len(Cluster.Elements) == 0:
				Application.DeleteObj(Cluster.FullName)

	Application.Application.DeselectAll()
	Application.SelectObj(oSel)
</QMenu_MenuItem><QMenu_MenuItem UID="{D62BDD47-6D15-4554-AB78-B35144053DB0}" category="Views" language="Python" name="User View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;User\&quot;)&quot;)
	eval(stri)</QMenu_MenuItem><QMenu_MenuItem UID="{8C8D022E-7FFB-4567-A3DA-ADA79164EBD6}" category="Views" language="Python" name="Right View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Right\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{CD557D14-5DD5-4F96-ACF3-94EF74B1278A}" category="Views" language="Python" name="Back View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Front\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (3,True,&quot;&quot;, viewIndices[oView])

</QMenu_MenuItem><QMenu_MenuItem UID="{B911C248-6BBA-4C8E-B809-31E03A08B6C3}" category="Views" language="Python" name="Front View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Front\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])
</QMenu_MenuItem><QMenu_MenuItem UID="{CAD3362E-E216-43A1-9388-98205A7B88B5}" category="Property Editing" language="Python" name="None" switch="False" type="QMenu_MenuItem"># Set selected Parameter(s) to None

def Script_Execute (self, QMenu_MenuItems, QMenu_Menus, QMenu_MenuSets): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,&quot;&quot;,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,&quot;&quot;,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{6BDDC8D3-63A3-4964-8C54-27A5771C955E}" category="Property Editing" language="Python" name="-1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,-1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,-1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{FC5D5A17-8A54-4B13-B8BD-0F26006C3BA6}" category="Views" language="Python" name="Bottom View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Top\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (2,True,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{77682E0E-59D8-458D-BC8B-4C0169C63B26}" category="Views" language="Python" name="LeftView" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Right\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (1,True,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{1A0615F6-75C5-44FB-961E-52B1819B8919}" category="Property Editing" language="Python" name="add 1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal+1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal+1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{99721178-FBF8-41C0-B059-A12DC987A360}" category="Property Editing" language="Python" name="subtract 1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal-1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal-1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{116664D3-B65C-47F4-B927-3B084840C6DA}" category="Views" language="Python" name="Set Wireframe Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;wireframe&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{DC25ADE9-572B-4B37-8B80-E3185D2BC30A}" category="Views" language="Python" name="Set Bounding Box Display mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;bbox&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{A702D2CC-35A9-406B-A86E-941AF86FE776}" category="Views" language="Python" name="Set Depth Cue Dispay Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;depthcue&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{23F6546E-2850-48EE-B97A-7015F205CB32}" category="Views" language="Python" name="Set Hidden Line Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;hiddenline&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{328711DD-5BA4-48B1-8E5D-CB54208139A8}" category="Views" language="Python" name="Set Constant Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;constant&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{B5A8306C-7FD2-4793-ACB1-3672A0EB0AFF}" category="Views" language="Python" name="Set Shaded Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;shaded&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{97001D36-A6C3-4FE8-94CC-9B051039955E}" category="Views" language="Python" name="Set Textured Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;textured&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{63A7C810-6417-4668-BF7D-30F001250298}" category="Views" language="Python" name="Set Textured Decal Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;texturedecal&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{EABEE5BF-6618-47F8-B7B6-10CA802E6ABA}" category="Views" language="Python" name="Set Realtime Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;realtimeshaders&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{68FBA8D9-AF3B-45CE-8A62-C972F32E9F07}" category="Curve Modeling" language="Python" name="Align Bezier Handles" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,2)
</QMenu_MenuItem><QMenu_MenuItem UID="{2153563F-9B64-416E-BB1B-27C0E3B568D5}" category="Curve Modeling" language="Python" name="Align Bezier Handles Forward to Back" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,0)
</QMenu_MenuItem><QMenu_MenuItem UID="{9FA2255E-5C3F-4738-8A62-7E34CFF61E9A}" category="Curve Modeling" language="Python" name="Align Bezier Handles Back to Forward" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,1)
</QMenu_MenuItem><QMenu_MenuItem UID="{D62CA298-3184-4093-BA40-13F5CB1BDE4A}" category="Curve Modeling" language="Python" name="Make Bezier-Knots Corners" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,7)
</QMenu_MenuItem><QMenu_MenuItem UID="{C958A297-54DD-48BB-AB66-0F62771CE258}" category="Curve Modeling" language="Python" name="Make Knot Segments Linear" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,5)
</QMenu_MenuItem><QMenu_MenuItem UID="{408FD0F3-CF33-4313-88D6-4C2EA80FFAEB}" category="Preferences" language="Python" name="Inspect Duplicate Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.duplicate&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{BE8BEA98-3403-40F8-BC81-93462526AA77}" category="Preferences" language="Python" name="Inspect Selection Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.select&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{5DB1DA2F-163F-4F24-B9C8-A053B601AFE5}" category="Preferences" language="Python" name="Inspect Camera Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.Camera&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C78808D5-2A2C-4E80-BE79-0716BD8506CC}" category="Curve Modeling" language="Python" name="Extract Edges as Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	sel = Application.Selection(0)
	ImmedMode = 0
	if Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) == True:
		ImmedMode = 1
	result= Application.ApplyGenOp(&quot;ExtractEdgeLoopOp&quot;, &quot;&quot;, sel, &quot;&quot;, ImmedMode, &quot;&quot;, &quot;&quot;)
	Application.InspectObj(result)
	
	</QMenu_MenuItem><QMenu_MenuItem UID="{0DDE9486-FF3C-44D4-A82C-B469CFB003D5}" category="Curve Modeling" language="Python" name="Remove Knot" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	ImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	curveList = list()
	for knot in Application.Selection:
		if knot.Type == &quot;knotSubComponent&quot;:
			curveList.append(knot.SubComponent.Parent3DObject) #Add curve to list of curves
			Application.SetCurveKnotMultiplicity(knot, 0, ImmedMode)
				
</QMenu_MenuItem><QMenu_MenuItem UID="{A566286F-AB7F-48BD-BBE1-ACA3ABE68C22}" category="Curve Modeling" language="Python" name="Create Blend Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	if len(Application.Selection) &gt;0 :
		if (Application.Selection(0).Type == &quot;crvbndrySubComponent&quot;):
			FirstBoundary = Application.Selection(0)
		else:
			FirstResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select first Boundary&quot;, &quot;Select first Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
			Application.LogMessage(&quot;Past first pick session A&quot;)
			FirstBoundary = FirstResult.Value(&quot;PickedElement&quot;)
	else:
		FirstResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select first Boundary&quot;, &quot;Select first Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
		Application.LogMessage(&quot;Past first pick session B&quot;)
		FirstBoundary = FirstResult.Value(&quot;PickedElement&quot;)
	
	if len(Application.Selection) &gt;1:
		if (Application.Selection(1).Type == &quot;crvbndrySubComponent&quot;):
			SecondBoundary = Application.Selection(1)
		else:
			SecondResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select second Boundary&quot;, &quot;Select second Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
			Application.LogMessage(&quot;Past second pick session A.&quot;)
			SecondBoundary = SecondResult.Value(&quot;PickedElement&quot;)
	else:
		SecondResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select second Boundary&quot;, &quot;Select second Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
		Application.LogMessage(&quot;Past second pick session B&quot;)
		SecondBoundary = SecondResult.Value(&quot;PickedElement&quot;)
	
	if FirstBoundary.Type == &quot;crvbndrySubComponent&quot; and SecondBoundary.Type == &quot;crvbndrySubComponent&quot;:
		Result = Application.ApplyGenOp(&quot;BlendCrv&quot;, &quot;&quot;, [FirstBoundary,SecondBoundary], 3, &quot;siPersistentOperation&quot;, &quot;siKeepGenOpInputs&quot;, &quot;&quot;)
		
	if Result != None:
		if Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) == True: #Is ImmediateMode enabled?
			ReturnVal = Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,4,False)
			if ReturnVal == True: #User has canceled?
				Application.DeleteObj()
			else:
				Application.FreezeModeling(Result)
		else: #We are not in ImmediateMode, this is simpler...
			keyState = Application.GetKeyboardState() #Get currently pressed modifier keys (if any)
			bCtrlDown = keyState[1] == 2 #Is Ctrl pressed?
			bAutoInspect = Application.GetUserPref( &quot;AutoInspectEnabled&quot; )
			if bAutoInspect and bCtrlDown==False or bAutoInspect==False and bCtrlDown:
				Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,1,False)
	
</QMenu_MenuItem><QMenu_MenuItem UID="{394C8DF5-9DBD-4A29-BFB1-3FE66E9E8ADE}" category="Curve Modeling" language="Python" name="Set Curve Knot Multiplicity" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	#ImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	#Application.LogMessage(&quot;ImmedMode at start is: &quot; + str(ImmedMode))
	knots = list()
	Sel = Application.Selection
	for obj in Sel:
		if obj.Type == &quot;knotSubComponent&quot;:
			knots.append(obj)
	
	#Application.Preferences.SetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot;, False )
	#NewImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	#Application.LogMessage (&quot;ImmedMode before applying Op is: &quot; + str(NewImmedMode))
	
	Op = Application.ApplyTopoOp(&quot;SetNurbsCrvKnotMultiplicity&quot;, knots, 3, &quot;siImmediatetOperation&quot;, &quot;&quot;)
	#Result = Application.SetCurveKnotMultiplicity(knots,3,&quot;siPersistentOperation&quot;)
	Application.LogMessage(&quot;Created operator: &quot; + str(Op))

	Application.InspectObj(Op,&quot;&quot;,&quot;&quot;,4,False)

	#Application.AutoInspect(Op)
	


	&quot;&quot;&quot;
	if Result != None:
		
		if ImmedMode == True: #Was the ImmediateMode enabled when operation was started?
			ReturnVal = Application.InspectObj(Result[0],&quot;&quot;,&quot;&quot;,4,True)
			if ReturnVal == True: #User has canceled?
				Application.DeleteObj(Result)
			else:
				Application.FreezeModeling(Result)
		else: #We are not in ImmediateMode, this is simpler...
			keyState = Application.GetKeyboardState() #Get currently pressed modifier keys (if any)
			bCtrlDown = keyState[1] == 2 #Is Ctrl pressed?
			bAutoInspect = Application.GetUserPref( &quot;AutoInspectEnabled&quot; )
			if bAutoInspect and bCtrlDown==False or bAutoInspect==False and bCtrlDown:
				Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,1,False)
		
	#except:
		#pass
	
	#Application.Preferences.SetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot;,ImmedMode )
	&quot;&quot;&quot;</QMenu_MenuItem><QMenu_MenuItem UID="{BE977542-9220-4B8D-B192-622F7D439EA9}" category="Curve Modeling" language="Python" name="Tweak Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.Commands( &quot;Direct Manip Tool&quot;  ).Execute()</QMenu_MenuItem><QMenu_MenuItem UID="{83AD26EA-03F0-48C2-88E5-FBDC839C3423}" category="Preferences" language="Python" name="Log Verbose Messages" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;scripting.msglogverbose&quot;) == True
	return State

def Switch_Execute(oContext ): #Don't rename this function
	LogVerboseState = Application.Preferences.GetPreferenceValue(&quot;scripting.msglogverbose&quot;)
	Application.SetValue(&quot;preferences.scripting.msglogverbose&quot;, not LogVerboseState, &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{2271F779-9D55-461F-A8D6-7E521D5BF2FE}" category="Preferences" language="Python" name="Log Messages" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;scripting.msglog&quot;) == True
	return State

def Switch_Execute( oContext ): #Don't rename this function
	LogState = Application.Preferences.GetPreferenceValue(&quot;scripting.msglog&quot;)
	Application.SetValue(&quot;preferences.scripting.msglog&quot;, not LogState, &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{CEBD28FC-0728-4260-9007-2CC8B898E36F}" category="Preferences" language="Python" name="Show Hyperlinks" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;scripting.cmdlinks&quot;) == True
	return State

def Switch_Execute(self, QMenu_MenuItems, QMenu_Menus, QMenu_MenuSets): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;scripting.cmdlinks&quot;)
	Application.SetValue(&quot;preferences.scripting.cmdlinks&quot;, not State, &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{958017C6-0FB0-44CF-909C-CB6777908891}" category="Preferences" language="Python" name="Log Messages Real-Time" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;scripting.msglogrealtime&quot;) == True
	return State

def Switch_Execute( oContext): #Don't rename this function
	LogState = Application.Preferences.GetPreferenceValue(&quot;scripting.msglogrealtime&quot;)
	Application.SetValue(&quot;preferences.scripting.msglogrealtime&quot;, not LogState, &quot;&quot;)


</QMenu_MenuItem><QMenu_MenuItem UID="{76FFEA5E-5638-4A3A-A104-C60FF5EAAB23}" category="Preferences" language="Python" name="Edit QMenus" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	CustomParams = Application.FindObjects( &quot;&quot;, &quot;{76332571-D242-11d0-B69C-00AA003B3EA6}&quot; )
	for CP in CustomParams:
		if CP.Type == (&quot;QMenuConfigurator&quot;):
			Application.InspectObj (CP)
			return
			</QMenu_MenuItem><QMenu_MenuItem UID="{49FCE10B-DCC3-4DD5-909D-D2DB0010955A}" category="Preferences" language="Python" name="QPop enabled" switch="True" type="QMenu_MenuItem">def Switch_Init ( oContext ): #Don't rename this function
	state = Application.GetValue(&quot;preferences.QMenu.QMenuEnabled&quot;)
	return state
	

def Switch_Execute ( oContext ): #Don't rename this function
	state = Application.GetValue(&quot;preferences.QMenu.QMenuEnabled&quot;)
	Application.SetValue(&quot;preferences.QMenu.QMenuEnabled&quot;, not state)

</QMenu_MenuItem><QMenu_MenuItem UID="{CB5D4861-038C-4CE5-8FFA-C99A42651A74}" category="Curve Modeling" language="Python" name="Make Knots Bezier" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.SetCurveKnotMultiplicity(Application.Selection, 3, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{3BA80E93-52A8-48CC-B5FE-04AC7FD621B2}" category="Curve Modeling" language="Python" name="Make Knots Non-Bezier" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.SetCurveKnotMultiplicity(Application.Selection, 1, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{3C1CAFDB-3790-4E2A-BE5C-64421F60FF50}" category="Curve Modeling" language="Python" name="Insert Bezier Knot" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.InsertCurveKnot(Application.Selection, 3, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{839290C1-4E38-4003-BE0C-33B1F1E2F328}" category="Curve Modeling" language="Python" name="Insert Knot" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	pass
	#Application.InsertCurveKnot(&quot;arc.isopnt[(0,0.375)]&quot;, 3, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{7D54EA61-B490-4C68-BAF0-039CABF9E5E4}" category="Property Editing" language="Python" name="Rename" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(Application.Selection, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)
</QMenu_MenuItem><QMenu_MenuItem UID="{6E24294A-1C66-4566-B977-86E39371BF84}" category="Selection" language="Python" name="Info Selection..." switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.InfoSelection(Application.Selection.GetAsText())</QMenu_MenuItem><QMenu_MenuItem UID="{45730977-8C29-4863-A5ED-4C25231350F0}" category="Selection" language="Python" name="Inspect Materials..." switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Mats = list()
	for oObj in Application.Selection:
		try:
			Mats.append(oObj.Material)
		except:
			pass

	Application.InspectObj(Mats)</QMenu_MenuItem><QMenu_MenuItem UID="{A60F2F50-890E-433B-8E14-41F1B7AF14B8}" category="Polygon Modeling" language="Python" name="Mesh Disc" switch="False" type="QMenu_MenuItem"># For whatever reason the DIsc mesh primitive is the only one that does not come with it's
# own command for generation, so we have to provide a scripted menu item for it

def Script_Execute (oContext): #Dont rename this function 
	Application.CreatePrim(&quot;Disc&quot;, &quot;MeshSurface&quot;, &quot;&quot;, &quot;&quot;)
</QMenu_MenuItem></QMenu_MenuItems><QMenu_Menus><QMenu_Menu executeCode="False" items="Command;Mark Hard Edge Vertex;{50830560-31B5-11D0-82E7-00A0243E268D}:{71CFB7B5-2B33-11D4-B840-009027BC6587};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Weld Points to COG;{89CE70BA-A68F-4E93-97A8-9B0DEDE855A3};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Weld Points to Target;{50830560-31B5-11D0-82E7-00A0243E268D}:{E5F394BB-72F7-49AC-B3A9-E1F7AE5E9D48};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Filter Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{AD25FA37-856E-4AA4-83F3-352713319986};Command;Paint Push Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0EB424E5-84F7-11D4-8094-00A0C9ED67BD};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B}" language="Python" name="Edit Polymesh Points" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Mark Hard Edge Vertex;{50830560-31B5-11D0-82E7-00A0243E268D}:{71CFB7B5-2B33-11D4-B840-009027BC6587};Command;Set Edge Crease Value;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E9FEE12-2D9E-11D4-B841-009027BC6587};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Select Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6ED1DB7-45B1-11D6-80CD-00A0C9ED67BD};Command;Select Boundary Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{5432F035-CC9F-44B1-BFF3-9F4609B35057};Command;Select Parallel Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{7C6E8253-85C0-4020-989E-774D582FE9D8};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Subdivide Edge;{50830560-31B5-11D0-82E7-00A0243E268D}:{8F1FA2AF-3635-11D4-A8AF-00C04F8EDF15};Command;Split Edge;{50830560-31B5-11D0-82E7-00A0243E268D}:{904FB220-46B2-11D4-8C28-009027BC3A0E};Command;Dissolve &amp; Clean Adjacent Vertices;{50830560-31B5-11D0-82E7-00A0243E268D}:{1D09DE94-79BA-4ADD-8F8A-ED34588877AA};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Filter Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{053894C2-8E7C-4F76-B1BB-283C34E3C420};Command;Collapse;{50830560-31B5-11D0-82E7-00A0243E268D}:{7F392188-2520-11D4-97F2-0800360BFF02};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Cap;{52974071-B7DB-4EE6-A21C-FBBC322FE711};Command;Weld Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{61467638-32CE-48C9-971C-904D60579F1A};QMenu_MenuItem;Extract Edges as Curve;{C78808D5-2A2C-4E80-BE79-0716BD8506CC};Command;Bridge Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{3AEF5A2C-40E4-4B08-AE6D-ABBC7C199907}" language="Python" name="Edit Polymesh Edges" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Dissolve &amp; Clean Adjacent Vertices;{50830560-31B5-11D0-82E7-00A0243E268D}:{1D09DE94-79BA-4ADD-8F8A-ED34588877AA};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Inset Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{61DB5CAA-03FB-497F-8AAC-A9BB5B6C72BE};Command;Offset Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{A3F7B88C-7B09-4B70-B55D-54B6D6D01BC5};Command;Local Subdivision;{50830560-31B5-11D0-82E7-00A0243E268D}:{F8842CA7-78FD-11D4-B851-009027BC6587};Command;Dice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{86B4DB7E-3569-4FD0-B8D3-05C11AA054D5};Command;Invert Selected Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{11BEB110-85B1-11D4-8C31-009027BC3A0E};Command;Dice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{86B4DB7E-3569-4FD0-B8D3-05C11AA054D5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Disconnect Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{8582A7F9-EF44-4C3E-8C38-472BFD0C8414};Command;Polygon Detach;{50830560-31B5-11D0-82E7-00A0243E268D}:{4F25DC5B-7EE8-487C-B639-D1E7946A53FC};Command;Polygon Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{598E1068-B64F-47F4-8F08-99443D94B0B5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Filter Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{1067D621-96FC-4DED-983F-E83C4D121372};Command;Polygon Reduction;{50830560-31B5-11D0-82E7-00A0243E268D}:{0488BE6A-6E7E-416B-9CAE-2A6A987BF75C};Command;Slice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{3FCF7E6F-5E01-4932-9D1A-201A269255C5};Command;Split Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{52964382-BCB8-11D4-8C4B-009027BC3A0E};Command;Subdivide Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{BC8CCEEF-370F-11D4-A8B0-00C04F8EDF15};Command;Quadrangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E71C2255-9AAF-4FF4-ABAC-4A6855C97C78};Command;Triangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{FB5B671D-C1A0-4DB6-8FF9-950A5029C2CD};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Bridge Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{95983629-72EA-11D4-A8C2-00C04F8EDF15};Command;Symmetrize Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{669FD6AA-D338-4311-9B7E-CB4A923311D1};Command;Duplicate Polygons Along Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{D1343A2C-97E5-4236-9F41-3DBD21CAD8CB}" language="Python" name="Edit Polymesh Polygons" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Mesh Merge;{50830560-31B5-11D0-82E7-00A0243E268D}:{AB9A5C20-5839-11D4-8C2A-009027BC3A0E};Command;Mesh Blend;{50830560-31B5-11D0-82E7-00A0243E268D}:{EB16D9E0-5CC1-11D4-8C2C-009027BC3A0E};Command;Boolean Union;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E8-8E7A-11D4-8094-00A0C9ED67BD};Command;Boolean Intersection;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E9-8E7A-11D4-8094-00A0C9ED67BD};Command;Boolean Difference;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E7-8E7A-11D4-8094-00A0C9ED67BD};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Unhide All Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{7BC3B51D-8FCA-4546-B99F-BDC4AE964409}" language="Python" name="Edit Polymeshes (multiple)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Isolate Selected;{50830560-31B5-11D0-82E7-00A0243E268D}:{153189E9-79CF-4333-89A2-35D123A8B003};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Set Realtime Display Mode;{EABEE5BF-6618-47F8-B7B6-10CA802E6ABA};QMenu_MenuItem;Set Textured Decal Display Mode;{63A7C810-6417-4668-BF7D-30F001250298};QMenu_MenuItem;Set Textured Display Mode;{97001D36-A6C3-4FE8-94CC-9B051039955E};QMenu_MenuItem;Set Shaded Display Mode;{B5A8306C-7FD2-4793-ACB1-3672A0EB0AFF};QMenu_MenuItem;Set Constant Display Mode;{328711DD-5BA4-48B1-8E5D-CB54208139A8};QMenu_MenuItem;Set Hidden Line Display Mode;{23F6546E-2850-48EE-B97A-7015F205CB32};QMenu_MenuItem;Set Depth Cue Dispay Mode;{A702D2CC-35A9-406B-A86E-941AF86FE776};QMenu_MenuItem;Set Wireframe Display Mode;{116664D3-B65C-47F4-B927-3B084840C6DA};QMenu_MenuItem;Set Bounding Box Display mode;{DC25ADE9-572B-4B37-8B80-E3185D2BC30A};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Toggle Headlight Display Mode;{50830560-31B5-11D0-82E7-00A0243E268D}:{24D69496-C507-4447-AB77-AB60904B17DC};Command;Toggle Wire On Shaded Display;{50830560-31B5-11D0-82E7-00A0243E268D}:{2218CD14-9A9A-49CA-A33F-B61A4710BFE8};Command;Toggle Shaded Display Mode;{50830560-31B5-11D0-82E7-00A0243E268D}:{CEBDE6E3-7C57-4349-B4E9-83234DFB91D3};Command;Show/Hide Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{E56444F0-99A6-11D1-84BF-00AA00135F7B};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Maximize/Restore Current Viewport;{50830560-31B5-11D0-82E7-00A0243E268D}:{2343C950-0D21-11D3-BFE5-00A0248F9397}" language="Python" name="Display Modes" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Duplicate Multiple Mesh Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{6F74FAC0-5E7A-11D4-8C2C-009027BC3A0E};Command;Duplicate Single Mesh Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{AF4EDB50-5E63-11D4-8C2C-009027BC3A0E};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02};Command;Grow Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{6218A21F-1147-11D4-A89D-00C04F8EDF15};Command;Shrink Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{69D3398B-73E6-4AB1-B3E5-7108216EF805};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Slice Polygons Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{6CA134E9-64EA-494B-A7EE-E47BF8D16931};Command;Split Polygon Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{C6737510-67EA-11D4-8C2D-009027BC3A0E};Command;Weld Point Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{45BA55DB-1280-46FC-96F2-D8385916D61F};Command;Add Vertex Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{64578190-B32E-11D4-8C47-009027BC3A0E};Command;Add Polygon Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{EFC008C0-3317-11D4-8C24-009027BC3A0E};Command;Disconnect Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{8582A7F9-EF44-4C3E-8C38-472BFD0C8414};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B};Command;Collapse;{50830560-31B5-11D0-82E7-00A0243E268D}:{7F392188-2520-11D4-97F2-0800360BFF02};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_Menu;Preferences &gt; Tools &gt; Polygon;{038CE531-8E15-4BA5-9085-0A63EB7C248A};QMenu_Menu;Preferences &gt; Commands &gt; Duplicate Options;{89FEB155-E8C9-44EE-8513-DEA9861B1294};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Bevel;{50830560-31B5-11D0-82E7-00A0243E268D}:{9589E229-4BB4-11D4-A8B7-00C04F8EDF15};Command;Unhide All Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{7BC3B51D-8FCA-4546-B99F-BDC4AE964409};Command;Extrude Component Along Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{C8436D81-4851-11D4-B7F3-0008C7A011A6};Command;Extrude Comp. Axis;{50830560-31B5-11D0-82E7-00A0243E268D}:{9E734592-4B92-11D4-B7F3-0008C7A011A6};Command;Add Edge Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{87F68420-4782-11D4-8C27-009027BC3A0E};Command;Tweak Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0D41FF0C-8AF4-4E18-9C1B-83277ACF12EF}" language="Python" name="Edit Polymesh (general)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Filter Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{053894C2-8E7C-4F76-B1BB-283C34E3C420};Command;Filter Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{AD25FA37-856E-4AA4-83F3-352713319986};Command;Filter Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{1067D621-96FC-4DED-983F-E83C4D121372};Command;Polygon Reduction;{50830560-31B5-11D0-82E7-00A0243E268D}:{0488BE6A-6E7E-416B-9CAE-2A6A987BF75C};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Invert All Normals;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC71-F6B6-11D2-AC7E-00A02485CECB};Command;Invert Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{8DE9E423-B5F0-11D4-87B1-00A0C9ED6CE2};Command;Symmetrize Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{669FD6AA-D338-4311-9B7E-CB4A923311D1};Command;Quadrangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E71C2255-9AAF-4FF4-ABAC-4A6855C97C78};Command;Triangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{FB5B671D-C1A0-4DB6-8FF9-950A5029C2CD};Command;Paint Push Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0EB424E5-84F7-11D4-8094-00A0C9ED67BD};Command;Dice Object;{50830560-31B5-11D0-82E7-00A0243E268D}:{6AF65230-4EDA-42EB-9AC5-192F4F3916BA};Command;Subdivide;{50830560-31B5-11D0-82E7-00A0243E268D}:{60D7DF7E-B5B0-11D4-814F-00A0C9AC19A9};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;PolyMesh Subdivide With Center;{50830560-31B5-11D0-82E7-00A0243E268D}:{412F8EE6-C4E2-11D4-B863-009027BC6587}" language="Python" name="Edit Polymesh" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;RelaxUVW;{50830560-31B5-11D0-82E7-00A0243E268D}:{ED3B4730-7798-45D8-9C23-5BCF3F8A7FEF}" language="Python" name="Edit UVs" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Tweak Curve;{BE977542-9220-4B8D-B192-622F7D439EA9};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Add Point on Curve Tool by CVs;{50830560-31B5-11D0-82E7-00A0243E268D}:{2BB0233A-293A-44DF-8A83-FEEA941BCE9B};Command;Add Point on Curve Tool by Bezier-Knot Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{E5AB5B29-A386-4CC5-A040-34956CD44199};Command;Add Point on Curve Tool by Knot Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{46353ACD-408A-4F3F-A0BB-0244A6CC9AF5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Delete Point on Curve Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{56F7ECF0-CD24-11D3-A9BA-009027BC65D7};Command;Raise Nurbs Curve Degree;{50830560-31B5-11D0-82E7-00A0243E268D}:{8C80C39D-F376-45DD-BE99-510CD7820EB3};Command;Insert Curve Knot;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0A2FA73-6831-47AF-A7E0-428E416F041B}" language="Python" name="Edit NURBS Curve (general)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Align Bezier Handles;{68FBA8D9-AF3B-45CE-8A62-C972F32E9F07};QMenu_MenuItem;Align Bezier Handles Back to Forward;{9FA2255E-5C3F-4738-8A62-7E34CFF61E9A};QMenu_MenuItem;Align Bezier Handles Forward to Back;{2153563F-9B64-416E-BB1B-27C0E3B568D5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Make Knots Bezier;{CB5D4861-038C-4CE5-8FFA-C99A42651A74};QMenu_MenuItem;Make Bezier-Knots Corners;{D62CA298-3184-4093-BA40-13F5CB1BDE4A};QMenu_MenuItem;Make Knot Segments Linear;{C958A297-54DD-48BB-AB66-0F62771CE258};QMenu_MenuItem;Make Knots Non-Bezier;{3BA80E93-52A8-48CC-B5FE-04AC7FD621B2};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Set Curve Knot Multiplicity;{394C8DF5-9DBD-4A29-BFB1-3FE66E9E8ADE};QMenu_MenuItem;Remove Knot;{0DDE9486-FF3C-44D4-A82C-B469CFB003D5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Curve Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9F-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curve Knot" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Insert Knot;{839290C1-4E38-4003-BE0C-33B1F1E2F328};QMenu_MenuItem;Insert Bezier Knot;{3C1CAFDB-3790-4E2A-BE5C-64421F60FF50};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Insert Curve Knot;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0A2FA73-6831-47AF-A7E0-428E416F041B}" language="Python" name="Edit NURBS Curve IsoPoint" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Extract Segment;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9A-F6B6-11D2-AC7E-00A02485CECB};Command;Subcurve Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{CB8498F3-CA7B-403B-9C97-BB79D465C2DE}" language="Python" name="Edit NURBS Curve Subcurve" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Light Selector (+Ctrl to inspect)" type="QMenu_Menu">#The following code adds a menu item per light in the scene to the bottom of the menu 
# which selects the respective light (or inspects it when ctrl key is pressed at the same time)

def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	self = oContext.CurrentObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the mneu after subsequent calls
	Lights = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;light&quot;, &quot;&quot;, True)
	for oLight in Lights:
		oLightItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		oLightItem.name = oLight.FullName
		
		Code = ('def Script_Execute (oContext):\n')
		Code += &quot;\tbCtrlDown = (Application.GetKeyboardState()[1]) == 2\n&quot;
		Code += &quot;\tbAutoInspect = Application.GetValue('preferences.Interaction.autoinspect')\n&quot;
		Code += &quot;\tif bAutoInspect and bCtrlDown or bAutoInspect==False and bCtrlDown==False: Application.InspectObj(\&quot;&quot; + oLight.FullName  + &quot;\&quot;);\n&quot;
		Code += (&quot;\telse: Application.SelectObj('&quot; + oLight.FullName + &quot;','','');&quot;)
		oLightItem.code = Code
		self.appendTempMenuItem (oLightItem)</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_Menu;Preferences &gt; Tools &gt; Camera;{C54F9101-6221-41FF-BE41-69014D6D3929};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Top View;{5FAD87DA-CE63-47A3-B295-3972B8EAA597};QMenu_MenuItem;Right View;{8C8D022E-7FFB-4567-A3DA-ADA79164EBD6};QMenu_MenuItem;Front View;{B911C248-6BBA-4C8E-B809-31E03A08B6C3};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Bottom View;{FC5D5A17-8A54-4B13-B8BD-0F26006C3BA6};QMenu_MenuItem;LeftView;{77682E0E-59D8-458D-BC8B-4C0169C63B26};QMenu_MenuItem;Back View;{CD557D14-5DD5-4F96-ACF3-94EF74B1278A};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;User View;{D62BDD47-6D15-4554-AB78-B35144053DB0}" language="Python" name="Set View to..." type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="" language="Python" name="Edit Shading Nodes" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	oLO = Application.Desktop.ActiveLayout;
	i = 0
	Application.LogMessage(oLO.Views(i).Name)
	Application.LogMessage(oLO.Views(i).GetAttributeValue(&quot;selection&quot;));
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;+100%;{286F754B-32B0-4C7E-A75C-9753016142C3};QMenu_MenuItem;+50%;{C399B8D4-B91E-4D5E-9385-F8F5AF0450D3};QMenu_MenuItem;+10%;{46267565-BA0C-44A2-A33F-2AF1AFC304A5};QMenu_MenuItem;add 1;{1A0615F6-75C5-44FB-961E-52B1819B8919}" language="Python" name="Property Editing - Add Value" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;subtract 1;{99721178-FBF8-41C0-B059-A12DC987A360};QMenu_MenuItem;-10%;{FD71AA8E-48D8-4215-875B-F9F903D7F7C2};QMenu_MenuItem;-50%;{346AA952-D8BB-4A03-B0A0-176E5AEE66BA}" language="Python" name="Property Editing - Subtract Value" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;10;{94C709A4-4374-4CE2-97AF-081B0BC620E0};QMenu_MenuItem;5;{FC12502E-8647-4844-A3DB-A7A8D45DFBBC};QMenu_MenuItem;1;{813F017E-F53C-4EAA-B761-E944CF1F26AB};QMenu_MenuItem;0,5;{C3514F58-B7B0-4FC8-86D2-C70F7AC930FD};QMenu_MenuItem;0,1;{288C84F4-4BF5-4D04-83D0-8203F6F405E7};QMenu_MenuItem;0;{202E185A-E1CF-4668-AE08-A44032DCDB53};QMenu_MenuItem;-1;{6BDDC8D3-63A3-4964-8C54-27A5771C955E};QMenu_MenuItem;None;{CAD3362E-E216-43A1-9388-98205A7B88B5}" language="Python" name="Property Editing - Set Value" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Camera Selector (+Ctrl to inspect)" type="QMenu_Menu">#The following code adds a menu item per existing camera to the bottom of the menu 
# which selects the respective camera (or inspects it when ctrl key is pressed at the same time)

def QMenu_Menu_Execute (oContext):	#Don't rename this function!
	self = oContext.CurrentObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cams = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;camera&quot;, &quot;&quot;, True)

	for oCam in Cams:
		oCamItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		oCamItem.name = oCam.FullName
		
		Code = ('def Script_Execute (oContext):\n')
		Code += ('\tApplication.SelectObj(&quot;'+ oCam.FullName + '&quot;, &quot;&quot;, &quot;&quot;)\n')
		Code += ('\tbCtrlDown = (Application.GetKeyboardState()[1]) == 2\n')
		Code += ('\tbAutoInspect = Application.GetValue(\&quot;preferences.Interaction.autoinspect\&quot;)\n')
		Code += ('\tif bAutoInspect and bCtrlDown or bAutoInspect==False and bCtrlDown==False: Application.InspectObj(\&quot;' + oCam.FullName + '.Camera\&quot;,)')
		oCamItem.code = Code
		self.appendTempMenuItem (oCamItem)</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_Menu;Light Selector (+Ctrl to inspect);{F6B18A35-1F0B-40E0-A43F-FA4A6257C81C};QMenu_Menu;Camera Selector (+Ctrl to inspect);{CD0E2142-C87E-4087-B71A-919680470229}" language="Python" name="Shading Properties" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Orbit Around Selection - Components only;{289FBBA6-DD49-4D59-BA6E-D4231712FBB9};QMenu_MenuItem;Orbit Around Selection;{48BDD8C1-E7B2-40A6-A4EC-080C14C6EA6C};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Inspect Camera Preferences;{5DB1DA2F-163F-4F24-B9C8-A053B601AFE5}" language="Python" name="Preferences &gt; Tools &gt; Camera" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Merge Clusters with same Material;{D53C3B05-02F2-4899-B532-B953A4C59136};Command;Create Texture Subprojection;{50830560-31B5-11D0-82E7-00A0243E268D}:{479C4EF9-509D-4F8B-99BC-42A06F13D56F};Command;Create PlanarXY Texture Projection;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E3FD9A2-0B13-11D4-B4AE-00AA0068D2C0};Command;Create PlanarXZ Texture Projection;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E3FD9A4-0B13-11D4-B4AE-00AA0068D2C0};Command;Create PlanarYZ Texture Projection;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E3FD9A3-0B13-11D4-B4AE-00AA0068D2C0}" language="Python" name="Create Texture Projection" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Look Through Spotlight" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function!
	self =  oContext.CurrentObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cams = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;Light&quot;, &quot;&quot;, True)
	
	for oCam in Cams:
		if Application.GetValue(oCam.FullName + &quot;.light.Type&quot;) == 2:
			print (oCam.FullName + &quot; is a spotlight&quot;)
			oCamItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
			oCamItem.name = oCam.FullName

			Code = ('def Script_Execute (oContext):\n\toVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )\n')
			Code+= ('\toView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)\n')
			Code += ('\toVM.SetAttributeValue(&quot;activecamera:&quot; + oView + &quot;\&quot;,&quot;' + oCam.FullName + '&quot;)\n')

			oCamItem.code = Code
			self.appendTempMenuItem (oCamItem)</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Look Through Camera" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function!
	self = oContext.CurrentObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cams = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;Camera&quot;, &quot;&quot;, True)

	for oCam in Cams:
		oCamItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		oCamItem.name = oCam.FullName

		Code = ('def Script_Execute ( oContext ):\n\t')
		Code += ('oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )\n\t')
		Code += ('oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)\n\t')
		Code += ('oVM.SetAttributeValue(&quot;activecamera:&quot; + oView + &quot;\&quot;,&quot;' + oCam.FullName + '&quot;)\n')

		oCamItem.code = Code
		self.appendTempMenuItem (oCamItem)</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Raycast Select in Shaded Mode;{E4E1B3B6-CE12-4977-9809-46809D1AF092};QMenu_MenuItem;Raycast Select - Include Backfacing Polygons;{7D65E2C7-423B-414D-9426-76734FC40086};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Inspect Selection Preferences;{BE8BEA98-3403-40F8-BC81-93462526AA77}" language="Python" name="Preferences &gt; Tools &gt; Polygon" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Extrude duplicated Polygons;{EB15754C-7A52-44D9-B59F-41070D905CF5};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};QMenu_MenuItem;Inspect Duplicate Preferences;{408FD0F3-CF33-4313-88D6-4C2EA80FFAEB}" language="Python" name="Preferences &gt; Commands &gt; Duplicate Options" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Blend;{50830560-31B5-11D0-82E7-00A0243E268D}:{8BD3C851-183C-11D3-A979-00A024190119};Command;Curve Fillet;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9E-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9F-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Merge;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC8D-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curves (multiple)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Log Messages;{2271F779-9D55-461F-A8D6-7E521D5BF2FE};QMenu_MenuItem;Log Verbose Messages;{83AD26EA-03F0-48C2-88E5-FBDC839C3423};QMenu_MenuItem;Log Messages Real-Time;{958017C6-0FB0-44CF-909C-CB6777908891};QMenu_MenuItem;Show Hyperlinks;{CEBD28FC-0728-4260-9007-2CC8B898E36F}" language="Python" name="Preferences &gt; Scripting" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Edit QMenus;{76FFEA5E-5638-4A3A-A104-C60FF5EAAB23};QMenu_MenuItem;QPop enabled;{49FCE10B-DCC3-4DD5-909D-D2DB0010955A}" language="Python" name="Preferences &gt;  QMenu" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Inverse;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC72-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Open/Close;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC89-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Shift;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC74-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Curve Clean;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA6-F6B6-11D2-AC7E-00A02485CECB};Command;Raise Nurbs Curve Degree;{50830560-31B5-11D0-82E7-00A0243E268D}:{8C80C39D-F376-45DD-BE99-510CD7820EB3};Command;Curve Reparameterize;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC7C-F6B6-11D2-AC7E-00A02485CECB};Command;Set Curve Knot Multiplicity;{50830560-31B5-11D0-82E7-00A0243E268D}:{F296A100-1154-43B6-A647-F083A5A2E592};Command;Curve Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9F-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curve" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Rename;{7D54EA61-B490-4C68-BAF0-039CABF9E5E4};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Select Tree;{50830560-31B5-11D0-82E7-00A0243E268D}:{32DDA350-0A24-11D3-B8A0-080036F3CC02};Command;Select Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{C973C090-1FAB-11D3-8BE6-00AA006130EF};Command;SelectMaterials;{50830560-31B5-11D0-82E7-00A0243E268D}:{31E095B8-43C8-4BCD-8B4B-192CDCA534FF};Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Duplicate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2B59DF2-9C38-11D3-8106-00A0C9AC19A9};Command;Clone Single;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2B59DF3-9C38-11D3-8106-00A0C9AC19A9};Command;Instantiate;{50830560-31B5-11D0-82E7-00A0243E268D}:{AC8A969A-3858-42B2-9B45-24D973C44360};Command;Duplicate/Instantiate Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{291E04D0-6068-11D1-9987-00A0243F0E60};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Create Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{DBB3A7E0-893D-11D2-B906-00A024C78EE3};Command;Add to Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{DBB3A7E1-893D-11D2-B906-00A024C78EE3};Command;Remove from Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{48F78661-894D-11D2-B906-00A024C78EE3};Command;Create Transform Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{23424001-3DAB-45C7-874E-3B0B1CA1186F};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Select Constraining Objects from Constrained;{50830560-31B5-11D0-82E7-00A0243E268D}:{CFDE8B8C-BDE2-4161-9F0B-C81F138D53DB};Command;Select Constrained Objects from Constraining;{50830560-31B5-11D0-82E7-00A0243E268D}:{89592423-7166-401B-93FA-4A8FF0F9DE1A};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Copy All Animation;{50830560-31B5-11D0-82E7-00A0243E268D}:{848D650F-5B83-11D5-80AC-00A0C9ED67BD};Command;Paste All Animation;{50830560-31B5-11D0-82E7-00A0243E268D}:{77F8D691-8F15-11D4-BE8E-00A0C982DDD4};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Set Thumbnail From Region;{50830560-31B5-11D0-82E7-00A0243E268D}:{12866D18-D141-48D1-B6EE-60A674994A31};Command;Set Thumbnail;{50830560-31B5-11D0-82E7-00A0243E268D}:{F3FF68D5-30AA-4C40-92E3-8C716F35CC43};Command;Clear Thumbnail;{50830560-31B5-11D0-82E7-00A0243E268D}:{01936020-4F1E-4623-856B-0DBAA97B7B58}" language="Python" name="Edit Selection 1" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Remove Transform Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{B8ECB928-8AA6-4F73-8698-C50F1AFC0547}" language="Python" name="Edit Transform Groups" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Info Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{4BDCDC62-E18E-11D3-8079-00A0C9ED67BD};Command;Open Transient Explorer;{50830560-31B5-11D0-82E7-00A0243E268D}:{C80E3C80-3D4E-44BF-803C-BD0EAD5B6B6F};Command;Open Attachments;{50830560-31B5-11D0-82E7-00A0243E268D}:{F9250A38-F848-11D4-BEAF-00A0C982DDD4};Command;Inspect Kinematics;{50830560-31B5-11D0-82E7-00A0243E268D}:{FAD01101-9132-11D3-B4A7-009027BC38D5};Command;Open Animation Editor on Kinematics;{50830560-31B5-11D0-82E7-00A0243E268D}:{E1336909-1FE2-11D5-BCEE-00D0B719022B};QMenu_MenuItem;Inspect Materials...;{45730977-8C29-4863-A5ED-4C25231350F0};Command;Last Operator in Stack;{50830560-31B5-11D0-82E7-00A0243E268D}:{CBC44EA0-5121-11D4-BC98-00D0B719022B}" language="Python" name="Edit Selection 2" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="" language="Python" name="Edit NURBS Surface" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Arc;{50830560-31B5-11D0-82E7-00A0243E268D}:{96A34F30-4717-11D0-B2A9-00A024C79287};Command;Curve Circle;{50830560-31B5-11D0-82E7-00A0243E268D}:{7B621D10-4717-11D0-B2A9-00A024C79287};Command;Curve Spiral;{50830560-31B5-11D0-82E7-00A0243E268D}:{96A34F31-4717-11D0-B2A9-00A024C79287};Command;Curve Square;{50830560-31B5-11D0-82E7-00A0243E268D}:{6DE4A0E0-C18B-11D0-8A0D-080036F3CC02};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Surface Cone;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F35-147A-11D0-AEA8-B4872D4679CD};Command;Surface Cube;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F32-147A-11D0-AEA8-B4872D4679CD};Command;Surface Cylinder;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F34-147A-11D0-AEA8-B4872D4679CD};Command;Surface Disc;{50830560-31B5-11D0-82E7-00A0243E268D}:{30C4A3F0-D6C8-11D0-91C3-00AA00629814};Command;Surface Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F31-147A-11D0-AEA8-B4872D4679CD};Command;Surface Sphere;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F33-147A-11D0-AEA8-B4872D4679CD};Command;Surface Torus;{50830560-31B5-11D0-82E7-00A0243E268D}:{360439C6-1477-11D0-AEA8-B4872D4679CD}" language="Python" name="Create Nurbs Primitive" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Mesh Cone;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC1-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Cube;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC2-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Cylinder;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC3-7B9E-11D0-BDED-00A0243E36A8};QMenu_MenuItem;Mesh Disc;{A60F2F50-890E-433B-8E14-41F1B7AF14B8};Command;Mesh Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC7-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Sphere;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCC-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Torus;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCA-7B9E-11D0-BDED-00A0243E36A8};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Mesh Dodecahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC5-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Icosahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC8-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Octahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC9-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Tetrahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCE-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Rhombicosidodecahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{2A7DDEF2-7560-11D5-80B0-00A0C9ED67BD};QMenuSeparator;NewSeparator;{B20F3ECD-7946-4A24-9DF5-2476C9A12DC2};Command;Null Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{B99F19D6-EEC9-11D3-807C-00A0C9ED67BD}" language="Python" name="Create Mesh Primitive" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu></QMenu_Menus><QMenu_MenuSets><QMenu_MenuSet AContexts="Polymesh (multiple);Polymesh (or components);NURBS_Curve (multiple);NURBS_Curve (or components);Transform Group;Default (always True)" AMenus="Edit Polymeshes (multiple);Edit Polymesh (general);Edit NURBS Curves (multiple);Edit NURBS Curve (general);Edit Transform Groups;Create Nurbs Primitive" BContexts="Default (always True)" BMenus="Edit Selection 1" CContexts="Default (always True)" CMenus="Edit Selection 2" DContexts="Polymesh (single);Polymesh_Polygons;Polymesh_Edges;Polymesh_Points;NURBS_Curve (single);NURBS_Curve_Subcurve;NURBS_Curve_IsoPoint;NURBS_Curve_Knot;NURBS_Curve_Point;NURBS_Surface (single);NURBS_Subsurface;NURBS_Surface Isoline;Default (always True)" DMenus="Edit Polymesh;Edit Polymesh Polygons;Edit Polymesh Edges;Edit Polymesh Points;Edit NURBS Curve;Edit NURBS Curve Subcurve;Edit NURBS Curve IsoPoint;Edit NURBS Curve Knot;None;None;None;None;Create Mesh Primitive" name="Modeling" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Edit UVs" BContexts="Default (always True)" BMenus="None" CContexts="Default (always True)" CMenus="None" DContexts="Default (always True)" DMenus="None" name="UV Editing" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Edit Shading Nodes" BContexts="Default (always True)" BMenus="None" CContexts="Default (always True)" CMenus="None" DContexts="Default (always True)" DMenus="None" name="Shader Editing" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Polymesh (or components);Default (always True)" AMenus="Create Texture Projection;None" BContexts="Default (always True)" BMenus="Shading Properties" CContexts="Default (always True)" CMenus="None" DContexts="Default (always True)" DMenus="None" name="Lighting and shading" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Property Editing - Set Value" BContexts="Default (always True)" BMenus="Property Editing - Add Value" CContexts="Default (always True)" CMenus="Property Editing - Subtract Value" DContexts="Default (always True)" DMenus="None" name="Property Editing" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Set View to..." BContexts="Default (always True)" BMenus="Display Modes" CContexts="Default (always True)" CMenus="Look Through Spotlight" DContexts="Default (always True)" DMenus="Look Through Camera" name="Views" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="None" BContexts="Default (always True)" BMenus="Preferences &gt; Scripting" CContexts="Default (always True)" CMenus="None" DContexts="Default (always True)" DMenus="None" name="Scripting" type="QMenu_MenuSet"/></QMenu_MenuSets><QMenu_MenuDisplayContexts><QMenu_MenuDisplayContext language="Python" name="Polymesh (or components)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Type = oContext.Types [0]
	ComponentParentTypes = oContext.Types
	if Type == &quot;polymsh&quot;:  #Is the first selected object a Polymesh?
		return True
	if ((Type == &quot;edgeSubComponent&quot;) or (Type == &quot;pntSubComponent&quot;) or (Type == &quot;polySubComponent&quot;)):
		if ComponentParentTypes[0] == &quot;polymsh&quot;:  #Is the parent of the selected component(s) a polymesh?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Default (always True)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #Don't rename this function
	return True</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Points" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (oContext.Types[0] == &quot;pntSubComponent&quot;):
		if oContext.ComponentParentTypes[0] == &quot;polymsh&quot;: #Is the parent of the selected component(s) a polymesh?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Edges" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ):  #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object an edge of on a Polymesh?
	if oContext.Types[0] == &quot;edgeSubComponent&quot;: 
		return True	#This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Polygons" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a polygont on a Polymesh?
	if oContext.Types[0] == &quot;polySubComponent&quot;:
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Subcurve" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a subcurve of a NURBS curve list?
	if Types[0] == &quot;subcrvSubComponent&quot;: 	
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh (multiple)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (len(Types) &gt; 1): #Is something selected?
		if Types[0] == &quot;polymsh&quot; and Types[1] == &quot;polymsh&quot;: #Are the first two selected objects polymeshes?
			return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh (single)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if oContext.Types[0] == &quot;polymsh&quot;:  #Is the first selected object a Polymesh?
		return True
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve (single)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute ( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a NURBS curvelist?
	if Types[0] == &quot;crvlist&quot;: 
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve (or components)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.Types
	if Types[0] == &quot;crvlist&quot;:  #Is the first selected object a curve list?
		return True
	if ((Types[0] == &quot;knotSubComponent&quot;) or (Types[0] == &quot;isopntSubComponent&quot;) or (Types[0] == &quot;pntSubComponent&quot;) or (Types[0] ==&quot;subcrvSubComponent&quot;)):
		if ComponentParentTypes[0] == &quot;crvlist&quot;:  #Is the parent of the selected component(s) a polymesh?
			return True								
	return False  #This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Point" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.Types
	if Types[0] == &quot;pntSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;: 		#Is the parent of the selected component(s) a curve list?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_IsoPoint" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): 	#This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.Types
	if Types[0] == &quot;isopntSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;:	#Is the parent of the selected component(s) a curve list?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Knot" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.Types
	if Types[0] == &quot;knotSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;: 		#Is the parent of the selected component(s) a curve list?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve (multiple)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (len( Types ) &gt; 1): #Is more than one obj selected?
		if Types[0] == &quot;crvlist&quot; and Types[1] == &quot;crvlist&quot;: #Are the first two selected objects curves?
			return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="JScript" name="_Test_Jscript_DisplayContext" type="QMenu_MenuDisplayContext">function QMenuContext_Execute( oContext ) //This function must not be renamed!
{
	LogMessage(oContext.CurrentObject.name);
	classNames = oContext.Types.toArray();
	LogMessage(classNames)
	//Application.LogMessage(oContext.ComponentClassNames)
	//Application.LogMessage(oContext.ComponentParents)
	//Application.LogMessage(oContext.ComponentParentTypes)
	//Application.LogMessage(oContext.ComponentParentClassNames)
	return true	//This function must return a boolean
}</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="VBScript" name="_Test_VBScript_DisplayContext" type="QMenu_MenuDisplayContext">Function QMenuContext_Execute(oContext) 'This function must not be renamed!
	LogMessage(oContext.CurrentObject.name)
	classNames = oContext.ClassNames
	'classNames = oContext.getSelectionClassNames()
	LogMessage classNames(0)
	'Application.LogMessage(ComponentClassNames)
	'Application.LogMessage(ComponentParents)
	'Application.LogMessage(ComponentParentTypes)
	'Application.LogMessage(ComponentParentClassNames)
	QMenuContext_Execute =  True	'This function must return a boolean
 end Function</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Transform Group" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;TransfoGroup&quot;:	
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface (single)" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;surfmeh&quot;:
		return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface Isoline" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;isolinevSubComponent&quot; or Types[0] == &quot;isolineuSubComponent&quot;:
		return True	
	return false #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Subsurface" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;subsrfSubComponent&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext></QMenu_MenuDisplayContexts><QMenuViewSignatures><QMenuViewSignature menuSets="Modeling;Lighting and shading;Views" name="3D Views" signature="Viewer;DS_ChildViewManager;DS_ChildRelationalView;TrayClientWindow;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="UV Editing" name="Texture Editor" signature="" type="QMenuViewSignature"/><QMenuViewSignature menuSets="Shader Editing" name="Render Tree" signature="" type="QMenuViewSignature"/><QMenuViewSignature menuSets="" name="Animation Editor  - FCurve Editor" signature="FcurveViewer;DS_ChildAnimationEditor;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="" name="Animation Mixer" signature="DS_ChildAnimationMixer;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="" name="Animation Editor - DopeSheet" signature="DopesheetView;DS_ChildDopeSheet;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="" name="Shape Manager" signature="Viewer;DS_ChildViewManager;DS_ChildRelationalView;TrayClientWindow;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="Property Editing" name="Property Editor" signature="DSPropertyInspectorPagesArea;Tab;DS_ChildPropertyEditor;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="Scripting" name="Script History" signature="ScintillaTabControl;DS_ChildScriptEditor;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/></QMenuViewSignatures><QMenuDisplayEvents><QMenuDisplayEvent key="49" keyMask="0" number="0" type="QMenuDisplayEvent"/><QMenuDisplayEvent key="50" keyMask="0" number="0" type="QMenuDisplayEvent"/><QMenuDisplayEvent key="220" keyMask="0" number="0" type="QMenuDisplayEvent"/></QMenuDisplayEvents></QMenuComponents>