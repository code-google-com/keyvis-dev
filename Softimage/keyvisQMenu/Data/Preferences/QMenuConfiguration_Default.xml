<?xml version="1.0" ?><QMenuComponents QMenu_Version="0.9"><QMenu_MenuItems><QMenu_MenuItem UID="{67EF479D-644C-46F8-ABDF-50A4F4EE007A}" category="Preferences" language="Python" name="Extrude duplicated Polygons" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;duplicate.polygons&quot;)

def Switch_Execute( oContext ): #Don't rename this function
	Application.SetValue (&quot;Preferences.duplicate.polygons&quot;, not Switch_Init( oContext ))</QMenu_MenuItem><QMenu_MenuItem UID="{7085DF8F-B849-4936-92F5-826D2401CE24}" category="Property Editing" language="Python" name="+10%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*1.1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*1.1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{0EFFA106-275B-406E-8583-156038EDC588}" category="Property Editing" language="Python" name="+50%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*1.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*1.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C0ED6D51-9807-4E5E-9CAE-0E5FCD8ED794}" category="Property Editing" language="Python" name="+100%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*2,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*2,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{6FE97920-DDD6-448A-B13C-A4FD0F4A5307}" category="Property Editing" language="Python" name="-10%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*0.9,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*0.9,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C5D78243-CE86-4CBF-B31D-1E62185426F5}" category="Property Editing" language="Python" name="-50%" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal*0.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal*0.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{DF6C6730-4AA5-4A84-B3A7-17287AB89852}" category="Property Editing" language="Python" name="0,1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0.1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0.1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{33732D96-0565-4A60-B80B-01BD6894EE77}" category="Property Editing" language="Python" name="0,5" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0.5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0.5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{287E9279-CFAF-43DE-ABD2-5ABF5967315C}" category="Property Editing" language="Python" name="1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{78CBD157-4804-4FDD-B4CF-6227CE7A2400}" category="Property Editing" language="Python" name="5" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,5,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,5,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{B8179A9D-20F4-4166-934C-2FBD2AA2F48A}" category="Property Editing" language="Python" name="10" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,10,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,10,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{419483EF-5CB4-4D3D-872F-DEF45E32EC39}" category="Property Editing" language="Python" name="0" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,0,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,0,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{8EA2A9F2-8B04-460B-A5ED-F8ECC42558C4}" category="Preferences" language="Python" name="Raycast Select in Shaded Mode" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ):
	return Application.Preferences.GetPreferenceValue(&quot;Select.rectraycast&quot;) 

def Switch_Execute( oContext ):
	Application.SetValue(&quot;preferences.Select.rectraycast&quot;, not Switch_Init(oContext))</QMenu_MenuItem><QMenu_MenuItem UID="{D303627B-D4D8-48DB-B1E0-65A9A05954DF}" category="Views" language="Python" name="Top View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Top\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{A6BF4677-A82F-4403-8A5E-52958BE8849B}" category="Preferences" language="Python" name="Raycast Select - Include Backfacing Polygons" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ):
	return Application.Preferences.GetPreferenceValue(&quot;Select.raycastbackfacing&quot;)

def Switch_Execute( oContext ):
	Application.SetValue(&quot;preferences.Select.raycastbackfacing&quot;, not Switch_Init(oContext))
</QMenu_MenuItem><QMenu_MenuItem UID="{D2A70824-3256-489E-91D6-810655AB48B4}" category="Preferences" language="Python" name="Orbit Around Selection" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	State = Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) == 2
	return State

def Switch_Execute( oContext ): #Don't rename this function
	if Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;) != 2:
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 2, &quot;&quot;)
	else: 
		Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, 0, &quot;&quot;)


</QMenu_MenuItem><QMenu_MenuItem UID="{24B4A05F-A2F1-4672-BFBA-7FB7F4B3DA44}" category="Preferences" language="Python" name="Orbit Around Selection - Components only" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;Camera.orbitselected&quot;)

def Switch_Execute( oContext ): #Don't rename this function
	Application.SetValue(&quot;preferences.Camera.orbitselected&quot;, not Switch_Init(oContext), &quot;&quot;)




</QMenu_MenuItem><QMenu_MenuItem UID="{2D070902-A2E5-4E22-B860-CF0AB4FFF170}" category="Clusters Editing" language="Python" name="Merge Clusters with same Material" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	Sel = Application.Selection
	oSel = list()
	for Obj in Sel:
		oSel.append(Obj)
	  
	for oObj in oSel:
		delClusters = list()
		Clusters = oObj.ActivePrimitive.Geometry.Clusters
		polyClusters = list()
		for oCluster in Clusters:
			if oCluster.Type == &quot;poly&quot; and len(oCluster.Elements) != 0:
				polyClusters.append (oCluster)
	 
		
		for polyCluster in polyClusters:
			currentmat = polyCluster.Material
			#pplication.LogMessage(currentmat)

			for oCheckCluster in polyClusters:
				if oCheckCluster != polyCluster and len(oCheckCluster.Elements) != 0:
					if oCheckCluster.Material.IsEqualTo(polyCluster.Material):
						#Application.LogMessage(&quot;Processing cluster: &quot; + oCheckCluster.Name)
						clusterElements = oCheckCluster.Elements
						Application.DeselectAll()
						Application.SelectMembers(oCheckCluster.FullName,True,False)
						Application.AddToSelection(polyCluster.FullName,&quot;ASITIS&quot;,False)
						Application.AddToCluster(&quot;&quot;, &quot;siRemoveFromExistingClusters&quot;)
		
		
		for Cluster in oObj.ActivePrimitive.Geometry.Clusters:
			if len(Cluster.Elements) == 0:
				Application.DeleteObj(Cluster.FullName)

	Application.Application.DeselectAll()
	Application.SelectObj(oSel)
</QMenu_MenuItem><QMenu_MenuItem UID="{5EF98895-EC51-4B7F-9A59-5BC032BA30C7}" category="Views" language="Python" name="User View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;User\&quot;)&quot;)
	eval(stri)</QMenu_MenuItem><QMenu_MenuItem UID="{2E33D78A-2F91-423E-B50B-F11035EE9A2B}" category="Views" language="Python" name="Right View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Right\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{1BD3E5D3-333A-418D-8268-231F7FC9AB22}" category="Views" language="Python" name="Back View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Front\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (3,True,&quot;&quot;, viewIndices[oView])

</QMenu_MenuItem><QMenu_MenuItem UID="{49382BE7-8719-4DFB-9498-D966F09F0DB5}" category="Views" language="Python" name="Front View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Front\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (&quot;&quot;,&quot;&quot;,&quot;&quot;, viewIndices[oView])
</QMenu_MenuItem><QMenu_MenuItem UID="{FCEE01DB-72A2-45A2-AAE8-20969543CACC}" category="Property Editing" language="Python" name="None" switch="False" type="QMenu_MenuItem"># Set selected Parameter(s) to None

def Script_Execute (self, QMenu_MenuItems, QMenu_Menus, QMenu_MenuSets): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,&quot;&quot;,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,&quot;&quot;,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{42A6D1D9-0C77-4842-BBA2-25887623DC5F}" category="Property Editing" language="Python" name="-1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,-1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							Application.SetValue (Parameter.FullName,-1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{31E8CAE1-7D8C-4E4F-A7B8-C70DC6857B1D}" category="Views" language="Python" name="Bottom View" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	stri = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Top\&quot;)&quot;)
	eval(stri)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (2,True,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{AF41C66A-24D8-4C76-A3AA-5B83E852A2AD}" category="Views" language="Python" name="LeftView" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	cmd = (&quot;oVM.SetAttributeValue(&quot; + &quot;\&quot;activecamera:&quot; + oView + &quot;\&quot;,\&quot;Right\&quot;)&quot;)
	eval(cmd)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	Application.AlignViewCamera (1,True,&quot;&quot;, viewIndices[oView])</QMenu_MenuItem><QMenu_MenuItem UID="{A978A5A7-E64E-4535-ACAB-99F71D37C803}" category="Property Editing" language="Python" name="add 1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects:
				print oObj
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					#print FullParamName
					#print (str(Application.Dictionary.GetObject(FullParamName).Type))
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						#print CurrentVal
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal+1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal+1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{47DF8838-3C9E-446B-B275-808FB44EC301}" category="Property Editing" language="Python" name="subtract 1" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Don't rename this function
	Application.QMenuRefreshSelectionContextObject(9999999)
	MarkedParams = Application.GetMarking()
	if MarkedParams != None:
		if len(MarkedParams) &gt; 0:
			for oObj in oContext.X3DObjects : #Application.Selection:
				for oParam in MarkedParams:
					FullParamName = (oObj.FullName + &quot;.&quot; +  oParam)
					if Application.Dictionary.GetObject(FullParamName).Type == &quot;Parameter&quot;:
						CurrentVal = Application.GetValue(FullParamName)
						Application.SetValue (oObj.FullName + &quot;.&quot; + oParam,CurrentVal-1,&quot;&quot;)
					else:
						Params = Application.Dictionary.GetObject(FullParamName)
						for Parameter in Params.Parameters:
							CurrentVal = Application.GetValue(Parameter.FullName)
							Application.SetValue (Parameter.FullName,CurrentVal-1,&quot;&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{CC4385D1-B625-4673-BD31-814D6688EE0A}" category="Views" language="Python" name="Wireframe Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;wireframe&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{13048473-8856-4E10-8B4E-771B2D226EF7}" category="Views" language="Python" name="Bounding Box Display mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;bbox&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{51C1BA1C-7866-4557-A434-91F030F1F99E}" category="Views" language="Python" name="Depth Cue Dispay Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;depthcue&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{2ABF346D-7F14-4D42-8686-552B16BF9AE7}" category="Views" language="Python" name="Hidden Line Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;hiddenline&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{17976A28-C598-489F-9B61-150C00A40123}" category="Views" language="Python" name="Constant Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;constant&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{79E79C4E-F395-4CBA-B340-633D66A19DA3}" category="Views" language="Python" name="Shaded Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;shaded&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{3570184A-0964-4D4F-A66E-4A3EFEA602E2}" category="Views" language="Python" name="Textured Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;textured&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{91D62CB5-9C3D-4EB4-8AA6-6BF709E44E2A}" category="Views" language="Python" name="Textured Decal Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;texturedecal&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{1DB3CAB3-BCDE-42A3-8661-1474E8DD5FC6}" category="Views" language="Python" name="Realtime Display Mode" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	Application.SetDisplayMode(oCam.FullName,&quot;realtimeshaders&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{3B4F441D-5309-4FE2-A7A3-A73B2CEF5339}" category="Curve Modeling" language="Python" name="Align Bezier Handles" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,2)
</QMenu_MenuItem><QMenu_MenuItem UID="{AC1CCF83-64B9-4687-A979-007553C84FF5}" category="Curve Modeling" language="Python" name="Align Bezier Handles Forward to Back" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,0)
</QMenu_MenuItem><QMenu_MenuItem UID="{7BB1D022-F941-4BE5-BB32-A71C1F004EBE}" category="Curve Modeling" language="Python" name="Align Bezier Handles Back to Forward" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,1)
</QMenu_MenuItem><QMenu_MenuItem UID="{F00A7F1C-7247-4CB9-85F0-6954203FE65B}" category="Curve Modeling" language="Python" name="Make Bezier-Knots Corners" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,7)
</QMenu_MenuItem><QMenu_MenuItem UID="{F287649D-E054-43BD-B00D-1EC3B50A6E05}" category="Curve Modeling" language="Python" name="Make Knot Segments Linear" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.AlignBezierKnotsTangents(Application.Selection,&quot;&quot;,5)
</QMenu_MenuItem><QMenu_MenuItem UID="{CFBF83CE-994F-461F-AF45-842F5124604E}" category="Preferences" language="Python" name="Inspect Duplicate Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.duplicate&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{021ACE47-19BF-45E9-B6E1-FBCA5E37D9EC}" category="Preferences" language="Python" name="Inspect Selection Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.select&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{1FDB2BE1-6D33-4767-9728-2361E2D0B7CC}" category="Preferences" language="Python" name="Inspect Camera Preferences" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(&quot;preferences.Camera&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{3B7B130D-A615-4B54-861E-9D335F05A065}" category="Curve Modeling" language="Python" name="Extract Edges as Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	sel = Application.Selection(0)
	ImmedMode = 0
	if Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) == True:
		ImmedMode = 1
	result= Application.ApplyGenOp(&quot;ExtractEdgeLoopOp&quot;, &quot;&quot;, sel, &quot;&quot;, ImmedMode, &quot;&quot;, &quot;&quot;)
	Application.InspectObj(result)
	
	</QMenu_MenuItem><QMenu_MenuItem UID="{B09B38A2-0A0C-40D9-8CCD-A264C830A224}" category="Curve Modeling" language="Python" name="Remove Knot" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	ImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	curveList = list()
	for knot in Application.Selection:
		if knot.Type == &quot;knotSubComponent&quot;:
			curveList.append(knot.SubComponent.Parent3DObject) #Add curve to list of curves
			Application.SetCurveKnotMultiplicity(knot, 0, ImmedMode)
				
</QMenu_MenuItem><QMenu_MenuItem UID="{6B996967-30FC-437E-94E1-3CC9539E7DA5}" category="Curve Modeling" language="Python" name="Create Blend Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	if len(Application.Selection) &gt;0 :
		if (Application.Selection(0).Type == &quot;crvbndrySubComponent&quot;):
			FirstBoundary = Application.Selection(0)
		else:
			FirstResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select first Boundary&quot;, &quot;Select first Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
			Application.LogMessage(&quot;Past first pick session A&quot;)
			FirstBoundary = FirstResult.Value(&quot;PickedElement&quot;)
	else:
		FirstResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select first Boundary&quot;, &quot;Select first Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
		Application.LogMessage(&quot;Past first pick session B&quot;)
		FirstBoundary = FirstResult.Value(&quot;PickedElement&quot;)
	
	if len(Application.Selection) &gt;1:
		if (Application.Selection(1).Type == &quot;crvbndrySubComponent&quot;):
			SecondBoundary = Application.Selection(1)
		else:
			SecondResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select second Boundary&quot;, &quot;Select second Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
			Application.LogMessage(&quot;Past second pick session A.&quot;)
			SecondBoundary = SecondResult.Value(&quot;PickedElement&quot;)
	else:
		SecondResult = Application.PickElement( &quot;CurveBoundary&quot; , &quot;Select second Boundary&quot;, &quot;Select second Boundary&quot;, &quot;&quot;, &quot;&quot;, 0, &quot;&quot; )
		Application.LogMessage(&quot;Past second pick session B&quot;)
		SecondBoundary = SecondResult.Value(&quot;PickedElement&quot;)
	
	if FirstBoundary.Type == &quot;crvbndrySubComponent&quot; and SecondBoundary.Type == &quot;crvbndrySubComponent&quot;:
		Result = Application.ApplyGenOp(&quot;BlendCrv&quot;, &quot;&quot;, [FirstBoundary,SecondBoundary], 3, &quot;siPersistentOperation&quot;, &quot;siKeepGenOpInputs&quot;, &quot;&quot;)
		
	if Result != None:
		if Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) == True: #Is ImmediateMode enabled?
			ReturnVal = Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,4,False)
			if ReturnVal == True: #User has canceled?
				Application.DeleteObj()
			else:
				Application.FreezeModeling(Result)
		else: #We are not in ImmediateMode, this is simpler...
			keyState = Application.GetKeyboardState() #Get currently pressed modifier keys (if any)
			bCtrlDown = keyState[1] == 2 #Is Ctrl pressed?
			bAutoInspect = Application.GetUserPref( &quot;AutoInspectEnabled&quot; )
			if bAutoInspect and bCtrlDown==False or bAutoInspect==False and bCtrlDown:
				Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,1,False)
	
</QMenu_MenuItem><QMenu_MenuItem UID="{970F9BC9-E6DA-49C0-ACF6-C544ECDEE750}" category="Curve Modeling" language="Python" name="Set Curve Knot Multiplicity" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	#ImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	#Application.LogMessage(&quot;ImmedMode at start is: &quot; + str(ImmedMode))
	knots = list()
	Sel = Application.Selection
	for obj in Sel:
		if obj.Type == &quot;knotSubComponent&quot;:
			knots.append(obj)
	
	#Application.Preferences.SetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot;, False )
	#NewImmedMode = Application.Preferences.GetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot; ) #Is ImmediateMode enabled?
	#Application.LogMessage (&quot;ImmedMode before applying Op is: &quot; + str(NewImmedMode))
	
	Op = Application.ApplyTopoOp(&quot;SetNurbsCrvKnotMultiplicity&quot;, knots, 3, &quot;siImmediatetOperation&quot;, &quot;&quot;)
	#Result = Application.SetCurveKnotMultiplicity(knots,3,&quot;siPersistentOperation&quot;)
	Application.LogMessage(&quot;Created operator: &quot; + str(Op))

	#Application.InspectObj(Op,&quot;&quot;,&quot;&quot;,4,False)

	Application.AutoInspect(Op)
	


	&quot;&quot;&quot;
	if Result != None:
		
		if ImmedMode == True: #Was the ImmediateMode enabled when operation was started?
			ReturnVal = Application.InspectObj(Result[0],&quot;&quot;,&quot;&quot;,4,True)
			if ReturnVal == True: #User has canceled?
				Application.DeleteObj(Result)
			else:
				Application.FreezeModeling(Result)
		else: #We are not in ImmediateMode, this is simpler...
			keyState = Application.GetKeyboardState() #Get currently pressed modifier keys (if any)
			bCtrlDown = keyState[1] == 2 #Is Ctrl pressed?
			bAutoInspect = Application.GetUserPref( &quot;AutoInspectEnabled&quot; )
			if bAutoInspect and bCtrlDown==False or bAutoInspect==False and bCtrlDown:
				Application.InspectObj(Result,&quot;&quot;,&quot;&quot;,1,False)
		
	#except:
		#pass
	
	#Application.Preferences.SetPreferenceValue( &quot;xsiprivate_unclassified.OperationMode&quot;,ImmedMode )
	&quot;&quot;&quot;</QMenu_MenuItem><QMenu_MenuItem UID="{02EB1766-65BF-424E-A304-C93AE8CEF882}" category="Curve Modeling" language="Python" name="Tweak Curve" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.Commands( &quot;Direct Manip Tool&quot;  ).Execute()</QMenu_MenuItem><QMenu_MenuItem UID="{265F835B-296D-4B1D-91F5-F7FB9D3BB55F}" category="Preferences" language="Python" name="Log Verbose Messages" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;scripting.msglogverbose&quot;)

def Switch_Execute(oContext ): #Don't rename this function
	Application.SetValue(&quot;preferences.scripting.msglogverbose&quot;, not Switch_Init(oContext), &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{85D6F9D5-F4AD-4C82-842B-3BE4A636DB7F}" category="Preferences" language="Python" name="Log Messages" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;scripting.msglog&quot;) 

def Switch_Execute( oContext ): #Don't rename this function
	Application.SetValue(&quot;preferences.scripting.msglog&quot;, not Switch_Init(oContext), &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{CC771794-20AB-41C4-86ED-50280FE4F83A}" category="Preferences" language="Python" name="Show Hyperlinks" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;scripting.cmdlinks&quot;)

def Switch_Execute(oContext): #Don't rename this function
	Application.SetValue(&quot;preferences.scripting.cmdlinks&quot;, not Switch_Init(oContext), &quot;&quot;)



</QMenu_MenuItem><QMenu_MenuItem UID="{3F66254A-42BD-4394-A60F-386B6CB3FBC4}" category="Preferences" language="Python" name="Log Messages Real-Time" switch="True" type="QMenu_MenuItem">def Switch_Init( oContext ): #Don't rename this function
	return Application.Preferences.GetPreferenceValue(&quot;scripting.msglogrealtime&quot;)

def Switch_Execute( oContext): #Don't rename this function
	Application.SetValue(&quot;preferences.scripting.msglogrealtime&quot;, not Switch_Init(oContext), &quot;&quot;)


</QMenu_MenuItem><QMenu_MenuItem UID="{CF054309-7D8D-4DB1-A3E6-463DEC3F15C2}" category="Preferences" language="Python" name="Edit QMenus" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	CustomParams = Application.FindObjects( &quot;&quot;, &quot;{76332571-D242-11d0-B69C-00AA003B3EA6}&quot; )
	for CP in CustomParams:
		if CP.Type == (&quot;QMenuConfigurator&quot;):
			Application.InspectObj (CP)
			return
			</QMenu_MenuItem><QMenu_MenuItem UID="{E6CD131B-6960-4815-9601-A6201AFB5E02}" category="Preferences" language="Python" name="QPop enabled" switch="True" type="QMenu_MenuItem">def Switch_Init ( oContext ): #Don't rename this function
	return Application.GetValue(&quot;preferences.QMenu.QMenuEnabled&quot;)

def Switch_Execute ( oContext ): #Don't rename this function
	Application.SetValue(&quot;preferences.QMenu.QMenuEnabled&quot;, not Switch_Init(oContext))

</QMenu_MenuItem><QMenu_MenuItem UID="{93386662-411D-4292-9203-9AF50E83136C}" category="Curve Modeling" language="Python" name="Make Knots Bezier" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.SetCurveKnotMultiplicity(Application.Selection, 3, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{1FFCE3D8-26DA-4DD8-A031-5130E3ABE4A4}" category="Curve Modeling" language="Python" name="Make Knots Non-Bezier" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.SetCurveKnotMultiplicity(Application.Selection, 1, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{199FEA6C-AD10-4A1E-AC03-5424EB652873}" category="Curve Modeling" language="Python" name="Insert Bezier Knot" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.InsertCurveKnot(Application.Selection, 3, &quot;siPersistentOperation&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{16688C8D-CB14-4CA5-9C8E-76DE2FC8D24E}" category="Property Editing" language="Python" name="Rename" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Application.InspectObj(Application.Selection, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)
</QMenu_MenuItem><QMenu_MenuItem UID="{76CB6E55-4571-4F47-B233-29989DC01952}" category="Selection" language="Python" name="Info Selection..." switch="False" type="QMenu_MenuItem">def Script_Execute (oContext ): #Dont rename this function 
	Application.InfoSelection(Application.Selection.GetAsText())</QMenu_MenuItem><QMenu_MenuItem UID="{A75BA2A0-4388-404C-9397-BE6F3D1C1F8C}" category="Selection" language="Python" name="Inspect Materials..." switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ): #Dont rename this function 
	Mats = list()
	for oObj in Application.Selection:
		try:
			Mats.append(oObj.Material)
		except:
			pass

	Application.InspectObj(Mats)</QMenu_MenuItem><QMenu_MenuItem UID="{413D3E0B-B393-4AD1-892B-BA2CCF6BFFC4}" category="Primitives" language="Python" name="Mesh Disc" switch="False" type="QMenu_MenuItem"># For whatever reason the Disc mesh primitive is the only one that does not come with it's
# own command for generation, so we have to provide a scripted menu item for it

def Script_Execute (oContext): #Dont rename this function 
	Application.CreatePrim(&quot;Disc&quot;, &quot;MeshSurface&quot;, &quot;&quot;, &quot;&quot;)
</QMenu_MenuItem><QMenu_MenuItem UID="{092101B2-D113-40C0-A554-6C8EAD8EE07D}" category="Surface Modeling" language="Python" name="Insert Knot Curve" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.Commands(&quot;Insert Surface Knot&quot;).Execute()</QMenu_MenuItem><QMenu_MenuItem UID="{01314EF5-504E-467F-A55B-CD5549A48119}" category="Surface Modeling" language="Python" name="Remove Knot Curve" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.Commands(&quot;Remove Surface Knot&quot;).Execute()

</QMenu_MenuItem><QMenu_MenuItem UID="{DC2C9C5E-C5CD-4C94-8706-315FEE107B2E}" category="Curve Modeling" language="Python" name="Create Empty Curve" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	result = Application.SICreateCurve()
	Application.SelectObj(result)
</QMenu_MenuItem><QMenu_MenuItem UID="{5AA21D82-E05A-418F-A205-99C015A8D583}" category="Curve Modeling" language="Python" name="Draw Cubic Curve by CVs" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.CVNURBSCurveTool()</QMenu_MenuItem><QMenu_MenuItem UID="{C909D037-3598-47C4-95D3-B19768D481B5}" category="Curve Modeling" language="Python" name="Draw Cubic Curve by Bezier-Knots" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.BezierCurveTool()
</QMenu_MenuItem><QMenu_MenuItem UID="{2E1840F0-B7B9-4F28-BDB0-2C0F43C4A8B9}" category="Curve Modeling" language="Python" name="Draw Linear Curve" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.LinearCurveTool()
</QMenu_MenuItem><QMenu_MenuItem UID="{78DA47C8-EDD0-4793-A3B5-1F3CF0E85633}" category="Curve Modeling" language="Python" name="Draw Cubic Curve By Knot-Points" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.NURBSCurveTool()
</QMenu_MenuItem><QMenu_MenuItem UID="{3D8C43CF-4607-4B10-8C69-D6679C507D53}" category="Views" language="Python" name="Camera Display Options" switch="False" type="QMenu_MenuItem">def Script_Execute ( oContext ):
	oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )
	oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)
	viewIndices = dict (A = 0, B = 1, C = 2, D = 3)
	oCam = Application.GetViewCamera(viewIndices[oView])
	CamDisplayOptionsPropName =  (oCam.FullName + &quot;.camdisp&quot;)
	Application.InspectObj(CamDisplayOptionsPropName)</QMenu_MenuItem><QMenu_MenuItem UID="{F3AE6FB3-16F0-4A03-AA5E-97B3960BA85D}" category="Dummy Items - Do not delete!" language="Python" name="Dummy_LightSelector" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	oLight = Application.Dictionary.GetObject(&quot;LIGHTNAME&quot;,False)
	objList = [oLight]
	keyPressed = Application.GetKeyboardState()[1]
	bCtrlDown = (keyPressed == 2 or keyPressed == 3)
	bAutoInspect = Application.GetValue('preferences.Interaction.autoinspect')
	if keyPressed == 1 or keyPressed == 3:
		try:
			Application.AddToSelection(objList, &quot;&quot;, False)
		except:
			Application.LogMessage(&quot;Could not add LIGHTNAME to current selection .It might already be selected.&quot;)
			
	else:
		Application.SelectObj(&quot;LIGHTNAME&quot;,&quot;&quot;,&quot;&quot;)
	if bAutoInspect and bCtrlDown == False:
		Application.InspectObj(&quot;LIGHTNAME&quot;)
	if (bAutoInspect == False and bCtrlDown == True):
		Application.InspectObj(&quot;LIGHTNAME&quot;)

	
	</QMenu_MenuItem><QMenu_MenuItem UID="{FEC2743D-12A4-4400-8FFA-78D594AABD44}" category="Dummy Items - Do not delete!" language="Python" name="Dummy_CameraSelector" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	oLight = Application.Dictionary.GetObject(&quot;CAMNAME&quot;,False)
	objList = [oLight]
	keyPressed = Application.GetKeyboardState()[1]
	bCtrlDown = (keyPressed == 2 or keyPressed == 3)
	bAutoInspect = Application.GetValue('preferences.Interaction.autoinspect')
	if keyPressed == 1 or keyPressed == 3:
		try:
			Application.AddToSelection(objList, &quot;&quot;, False)
		except:
			Application.LogMessage(&quot;Could not add CAMNAME to current selection .It might already be selected.&quot;)
			
	else:
		Application.SelectObj(&quot;CAMNAME&quot;,&quot;&quot;,&quot;&quot;)
	if bAutoInspect and bCtrlDown == False:
		Application.InspectObj(&quot;CAMNAME&quot;)
	if (bAutoInspect == False and bCtrlDown == True):
		Application.InspectObj(&quot;CAMNAME&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{639C98AA-5F6F-42DB-9A46-ABECCD3BA490}" category="Views" language="Python" name="Open Cache Manager" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Cache Manager&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{E4EFCB21-1E9D-4447-BB55-4C5AEE4429F1}" category="Views" language="Python" name="Open Scene Search" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Scene Search&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{441AA4B0-9841-4A6A-9DF3-9B962D9181C4}" category="Views" language="Python" name="Open Scene Debugger" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Scene Debugger&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{C65193A7-E078-42DF-90DC-2290E407221F}" category="Views" language="Python" name="Open External Files Manager" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;External Files Manager&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{4D5A0D4A-28A7-4681-A473-7D92FEF52D12}" category="Views" language="Python" name="Open Browser" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Browser&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{0F97BF38-6CAC-484E-B44F-FC5637BAD708}" category="Views" language="Python" name="Open Render Manager" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Render Manager&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{4BABAB24-AAB4-47EA-BE2B-EB601DEC8F21}" category="Views" language="Python" name="Open Material Manager" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Material Manager&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{09D0CD23-5E2A-4848-8DEC-F30F285BD84E}" category="Views" language="Python" name="Open Texture Editor" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.OpenView(&quot;Texture Editor&quot;)</QMenu_MenuItem><QMenu_MenuItem UID="{B46A7EEE-61F9-4EFC-96D0-638C3572E63B}" category="Group Editing" language="Python" name="Remove Group" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.RemoveGroup()
</QMenu_MenuItem><QMenu_MenuItem UID="{21428902-B998-4DEA-8514-0496A63BB480}" category="Group Editing" language="Python" name="Add To Group" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.AddToGroup()</QMenu_MenuItem><QMenu_MenuItem UID="{66AA6568-1CF7-49EE-ACEE-D6A83104CF27}" category="Group Editing" language="Python" name="Remove From Group" switch="False" type="QMenu_MenuItem">def Script_Execute (oContext): #Dont rename this function 
	Application.RemoveFromGroup()</QMenu_MenuItem></QMenu_MenuItems><QMenu_Menus><QMenu_Menu executeCode="False" items="Command;Mark Hard Edge Vertex;{50830560-31B5-11D0-82E7-00A0243E268D}:{71CFB7B5-2B33-11D4-B840-009027BC6587};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Weld Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{8B4285B7-97C9-4893-A914-EA36F20E509F};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Weld Points to Target;{50830560-31B5-11D0-82E7-00A0243E268D}:{E5F394BB-72F7-49AC-B3A9-E1F7AE5E9D48};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Filter Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{AD25FA37-856E-4AA4-83F3-352713319986};Command;Paint Push Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0EB424E5-84F7-11D4-8094-00A0C9ED67BD};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B}" language="Python" name="Edit Polymesh Points" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Mark Hard Edge Vertex;{50830560-31B5-11D0-82E7-00A0243E268D}:{71CFB7B5-2B33-11D4-B840-009027BC6587};Command;Set Edge Crease Value;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E9FEE12-2D9E-11D4-B841-009027BC6587};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Select Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6ED1DB7-45B1-11D6-80CD-00A0C9ED67BD};Command;Select Boundary Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{5432F035-CC9F-44B1-BFF3-9F4609B35057};Command;Select Parallel Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{7C6E8253-85C0-4020-989E-774D582FE9D8};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Subdivide Edge;{50830560-31B5-11D0-82E7-00A0243E268D}:{8F1FA2AF-3635-11D4-A8AF-00C04F8EDF15};Command;Split Edge;{50830560-31B5-11D0-82E7-00A0243E268D}:{904FB220-46B2-11D4-8C28-009027BC3A0E};Command;Dissolve &amp; Clean Adjacent Vertices;{50830560-31B5-11D0-82E7-00A0243E268D}:{1D09DE94-79BA-4ADD-8F8A-ED34588877AA};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Filter Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{053894C2-8E7C-4F76-B1BB-283C34E3C420};Command;Collapse;{50830560-31B5-11D0-82E7-00A0243E268D}:{7F392188-2520-11D4-97F2-0800360BFF02};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Weld Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{61467638-32CE-48C9-971C-904D60579F1A};Command;Edge Loop Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{4B3745D7-9FB9-4F6E-B7F3-4C2B5DB61A3B};Command;Bridge Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{3AEF5A2C-40E4-4B08-AE6D-ABBC7C199907}" language="Python" name="Edit Polymesh Edges" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Dissolve &amp; Clean Adjacent Vertices;{50830560-31B5-11D0-82E7-00A0243E268D}:{1D09DE94-79BA-4ADD-8F8A-ED34588877AA};Command;Dissolve Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{B39B38C0-90C4-11D4-A9E3-009027BC65D7};Command;Inset Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{61DB5CAA-03FB-497F-8AAC-A9BB5B6C72BE};Command;Offset Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{A3F7B88C-7B09-4B70-B55D-54B6D6D01BC5};Command;Local Subdivision;{50830560-31B5-11D0-82E7-00A0243E268D}:{F8842CA7-78FD-11D4-B851-009027BC6587};Command;Dice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{86B4DB7E-3569-4FD0-B8D3-05C11AA054D5};Command;Invert Selected Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{11BEB110-85B1-11D4-8C31-009027BC3A0E};Command;Dice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{86B4DB7E-3569-4FD0-B8D3-05C11AA054D5};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Disconnect Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{8582A7F9-EF44-4C3E-8C38-472BFD0C8414};Command;Polygon Detach;{50830560-31B5-11D0-82E7-00A0243E268D}:{4F25DC5B-7EE8-487C-B639-D1E7946A53FC};Command;Polygon Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{598E1068-B64F-47F4-8F08-99443D94B0B5};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Filter Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{1067D621-96FC-4DED-983F-E83C4D121372};Command;Polygon Reduction;{50830560-31B5-11D0-82E7-00A0243E268D}:{0488BE6A-6E7E-416B-9CAE-2A6A987BF75C};Command;Slice Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{3FCF7E6F-5E01-4932-9D1A-201A269255C5};Command;Split Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{52964382-BCB8-11D4-8C4B-009027BC3A0E};Command;Subdivide Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{BC8CCEEF-370F-11D4-A8B0-00C04F8EDF15};Command;Quadrangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E71C2255-9AAF-4FF4-ABAC-4A6855C97C78};Command;Triangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{FB5B671D-C1A0-4DB6-8FF9-950A5029C2CD};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Bridge Polygon;{50830560-31B5-11D0-82E7-00A0243E268D}:{95983629-72EA-11D4-A8C2-00C04F8EDF15};Command;Symmetrize Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{669FD6AA-D338-4311-9B7E-CB4A923311D1};Command;Duplicate Polygons Along Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{D1343A2C-97E5-4236-9F41-3DBD21CAD8CB}" language="Python" name="Edit Polymesh Polygons" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Unhide All Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{7BC3B51D-8FCA-4546-B99F-BDC4AE964409};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Mesh Merge;{50830560-31B5-11D0-82E7-00A0243E268D}:{AB9A5C20-5839-11D4-8C2A-009027BC3A0E};Command;Mesh Blend;{50830560-31B5-11D0-82E7-00A0243E268D}:{EB16D9E0-5CC1-11D4-8C2C-009027BC3A0E};Command;Boolean Union;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E8-8E7A-11D4-8094-00A0C9ED67BD};Command;Boolean Intersection;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E9-8E7A-11D4-8094-00A0C9ED67BD};Command;Boolean Difference;{50830560-31B5-11D0-82E7-00A0243E268D}:{BDF752E7-8E7A-11D4-8094-00A0C9ED67BD}" language="Python" name="Edit Polymeshes (multiple)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Isolate Selected;{50830560-31B5-11D0-82E7-00A0243E268D}:{153189E9-79CF-4333-89A2-35D123A8B003};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Realtime Display Mode;{1DB3CAB3-BCDE-42A3-8661-1474E8DD5FC6};QMenu_MenuItem;Textured Decal Display Mode;{91D62CB5-9C3D-4EB4-8AA6-6BF709E44E2A};QMenu_MenuItem;Textured Display Mode;{3570184A-0964-4D4F-A66E-4A3EFEA602E2};QMenu_MenuItem;Shaded Display Mode;{79E79C4E-F395-4CBA-B340-633D66A19DA3};QMenu_MenuItem;Constant Display Mode;{17976A28-C598-489F-9B61-150C00A40123};QMenu_MenuItem;Hidden Line Display Mode;{2ABF346D-7F14-4D42-8686-552B16BF9AE7};QMenu_MenuItem;Depth Cue Dispay Mode;{51C1BA1C-7866-4557-A434-91F030F1F99E};QMenu_MenuItem;Wireframe Display Mode;{CC4385D1-B625-4673-BD31-814D6688EE0A};QMenu_MenuItem;Bounding Box Display mode;{13048473-8856-4E10-8B4E-771B2D226EF7};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Toggle Headlight Display Mode;{50830560-31B5-11D0-82E7-00A0243E268D}:{24D69496-C507-4447-AB77-AB60904B17DC};Command;Toggle Wire On Shaded Display;{50830560-31B5-11D0-82E7-00A0243E268D}:{2218CD14-9A9A-49CA-A33F-B61A4710BFE8};Command;Toggle Shaded Display Mode;{50830560-31B5-11D0-82E7-00A0243E268D}:{CEBDE6E3-7C57-4349-B4E9-83234DFB91D3};Command;Show/Hide Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{E56444F0-99A6-11D1-84BF-00AA00135F7B};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Maximize/Restore Current Viewport;{50830560-31B5-11D0-82E7-00A0243E268D}:{2343C950-0D21-11D3-BFE5-00A0248F9397}" language="Python" name="Display Modes" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Unhide All Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{7BC3B51D-8FCA-4546-B99F-BDC4AE964409};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Duplicate Multiple Mesh Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{6F74FAC0-5E7A-11D4-8C2C-009027BC3A0E};Command;Duplicate Single Mesh Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{AF4EDB50-5E63-11D4-8C2C-009027BC3A0E};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Slice Polygons Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{6CA134E9-64EA-494B-A7EE-E47BF8D16931};Command;Split Polygon Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{C6737510-67EA-11D4-8C2D-009027BC3A0E};Command;Add Vertex Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{64578190-B32E-11D4-8C47-009027BC3A0E};Command;Disconnect Component;{50830560-31B5-11D0-82E7-00A0243E268D}:{8582A7F9-EF44-4C3E-8C38-472BFD0C8414};Command;Extrude Component Along Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{C8436D81-4851-11D4-B7F3-0008C7A011A6};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_Menu;Preferences &gt; Tools &gt; Polygon;{D8C025F9-E1C7-4E17-BDBC-DEC784F116B7};QMenu_Menu;Preferences &gt; Commands &gt; Duplicate Options;{1B199E07-2157-4E45-BFA2-E988DE71BF8F};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B};Command;Tweak Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0D41FF0C-8AF4-4E18-9C1B-83277ACF12EF};Command;Add Polygon Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{EFC008C0-3317-11D4-8C24-009027BC3A0E};Command;Add Edge Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{87F68420-4782-11D4-8C27-009027BC3A0E};Command;Collapse;{50830560-31B5-11D0-82E7-00A0243E268D}:{7F392188-2520-11D4-97F2-0800360BFF02};Command;Bevel;{50830560-31B5-11D0-82E7-00A0243E268D}:{9589E229-4BB4-11D4-A8B7-00C04F8EDF15};Command;Extrude Comp. Axis;{50830560-31B5-11D0-82E7-00A0243E268D}:{9E734592-4B92-11D4-B7F3-0008C7A011A6}" language="Python" name="Edit Polymesh (general)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Filter Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{053894C2-8E7C-4F76-B1BB-283C34E3C420};Command;Filter Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{AD25FA37-856E-4AA4-83F3-352713319986};Command;Filter Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{1067D621-96FC-4DED-983F-E83C4D121372};Command;Polygon Reduction;{50830560-31B5-11D0-82E7-00A0243E268D}:{0488BE6A-6E7E-416B-9CAE-2A6A987BF75C};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Invert All Normals;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC71-F6B6-11D2-AC7E-00A02485CECB};Command;Invert Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{8DE9E423-B5F0-11D4-87B1-00A0C9ED6CE2};Command;Symmetrize Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{669FD6AA-D338-4311-9B7E-CB4A923311D1};Command;Quadrangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E71C2255-9AAF-4FF4-ABAC-4A6855C97C78};Command;Triangulate;{50830560-31B5-11D0-82E7-00A0243E268D}:{FB5B671D-C1A0-4DB6-8FF9-950A5029C2CD};Command;Paint Push Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0EB424E5-84F7-11D4-8094-00A0C9ED67BD};Command;Dice Object;{50830560-31B5-11D0-82E7-00A0243E268D}:{6AF65230-4EDA-42EB-9AC5-192F4F3916BA};Command;Subdivide;{50830560-31B5-11D0-82E7-00A0243E268D}:{60D7DF7E-B5B0-11D4-814F-00A0C9AC19A9};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;PolyMesh Subdivide With Center;{50830560-31B5-11D0-82E7-00A0243E268D}:{412F8EE6-C4E2-11D4-B863-009027BC6587}" language="Python" name="Edit Polymesh" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Tweak Curve;{02EB1766-65BF-424E-A304-C93AE8CEF882};Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Add Point on Curve Tool by CVs;{50830560-31B5-11D0-82E7-00A0243E268D}:{2BB0233A-293A-44DF-8A83-FEEA941BCE9B};Command;Add Point on Curve Tool by Bezier-Knot Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{E5AB5B29-A386-4CC5-A040-34956CD44199};Command;Add Point on Curve Tool by Knot Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{46353ACD-408A-4F3F-A0BB-0244A6CC9AF5};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Delete Point on Curve Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{56F7ECF0-CD24-11D3-A9BA-009027BC65D7};Command;Raise Nurbs Curve Degree;{50830560-31B5-11D0-82E7-00A0243E268D}:{8C80C39D-F376-45DD-BE99-510CD7820EB3};Command;Insert Curve Knot;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0A2FA73-6831-47AF-A7E0-428E416F041B};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Curve Extract Segment;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9A-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curve (general)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Align Bezier Handles;{3B4F441D-5309-4FE2-A7A3-A73B2CEF5339};QMenu_MenuItem;Align Bezier Handles Back to Forward;{7BB1D022-F941-4BE5-BB32-A71C1F004EBE};QMenu_MenuItem;Align Bezier Handles Forward to Back;{AC1CCF83-64B9-4687-A979-007553C84FF5};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Make Knots Bezier;{93386662-411D-4292-9203-9AF50E83136C};QMenu_MenuItem;Make Bezier-Knots Corners;{F00A7F1C-7247-4CB9-85F0-6954203FE65B};QMenu_MenuItem;Make Knot Segments Linear;{F287649D-E054-43BD-B00D-1EC3B50A6E05};QMenu_MenuItem;Make Knots Non-Bezier;{1FFCE3D8-26DA-4DD8-A031-5130E3ABE4A4};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Set Curve Knot Multiplicity;{970F9BC9-E6DA-49C0-ACF6-C544ECDEE750};QMenu_MenuItem;Remove Knot;{B09B38A2-0A0C-40D9-8CCD-A264C830A224};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Curve Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9F-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curve Knot" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Insert Bezier Knot;{199FEA6C-AD10-4A1E-AC03-5424EB652873};Command;Insert Curve Knot;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0A2FA73-6831-47AF-A7E0-428E416F041B}" language="Python" name="Edit NURBS Curve IsoPoint" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Subcurve Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{CB8498F3-CA7B-403B-9C97-BB79D465C2DE}" language="Python" name="Edit NURBS Curve Subcurve" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#This function must not be renamed!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Light Inspector (+CTRL to select only)" type="QMenu_Menu">#The following code adds a menu item per light in the scene to the bottom of the menu 
# which selects the respective light (or inspects it when ctrl key is pressed at the same time)

def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	self = oContext.ThisQMenuObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the mneu after subsequent calls
	Lights = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;light&quot;, &quot;&quot;, True)
	oDummyMenuItem = Application.QMenuGetByName(&quot;MenuItem&quot;,&quot;Dummy_LightSelector&quot;)
	DummyCode = oDummyMenuItem.Code

	for oLight in Lights:
		oLightMenuItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		LightSpecificCode = DummyCode.replace(&quot;LIGHTNAME&quot;, oLight.FullName)
		oLightMenuItem.Name = oLight.FullName
		oLightMenuItem.code = LightSpecificCode #Set the code in the Menu Item we have concatenated above
		self.appendTempMenuItem (oLightMenuItem) #Add the menu item to the list of temporary menu items of this menu</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_Menu;Preferences &gt; Tools &gt; Camera;{1D54947F-08AB-4258-893E-E404B1CDB2DF};Command;Visibility Options (All Cameras);{50830560-31B5-11D0-82E7-00A0243E268D}:{DD9D2CC1-4154-11D3-B7B3-0008C7A011A6};Command;Camera Visibility Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{6FF26830-0D57-11D3-BFE5-00A0248F9397};QMenu_MenuItem;Camera Display Options;{3D8C43CF-4607-4B10-8C69-D6679C507D53};QMenu_Menu;New Camera;{4A5335B4-9461-4DDF-9BAB-96EE05083BAF};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Top View;{D303627B-D4D8-48DB-B1E0-65A9A05954DF};QMenu_MenuItem;Right View;{2E33D78A-2F91-423E-B50B-F11035EE9A2B};QMenu_MenuItem;Front View;{49382BE7-8719-4DFB-9498-D966F09F0DB5};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Bottom View;{31E8CAE1-7D8C-4E4F-A7B8-C70DC6857B1D};QMenu_MenuItem;LeftView;{AF41C66A-24D8-4C76-A3AA-5B83E852A2AD};QMenu_MenuItem;Back View;{1BD3E5D3-333A-418D-8268-231F7FC9AB22};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;User View;{5EF98895-EC51-4B7F-9A59-5BC032BA30C7}" language="Python" name="Set View to..." type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Remove All Shaders;{50830560-31B5-11D0-82E7-00A0243E268D}:{4E4E7D06-F0D9-11D2-AA72-00AA0068D2C0};Command;Remove Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{4E4E7D04-F0D9-11D2-AA72-00AA0068D2C0};Command;Modify Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{1C73F400-24E8-11D3-BFFA-00A0248F9397};Command;SelectMaterials;{50830560-31B5-11D0-82E7-00A0243E268D}:{31E095B8-43C8-4BCD-8B4B-192CDCA534FF};QMenu_MenuItem;Merge Clusters with same Material;{2D070902-A2E5-4E22-B860-CF0AB4FFF170}" language="Python" name="Edit Shading Nodes" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	oLO = Application.Desktop.ActiveLayout;
	i = 0
	Application.LogMessage(oLO.Views(i).Name)
	Application.LogMessage(oLO.Views(i).GetAttributeValue(&quot;selection&quot;));
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;+100%;{C0ED6D51-9807-4E5E-9CAE-0E5FCD8ED794};QMenu_MenuItem;+50%;{0EFFA106-275B-406E-8583-156038EDC588};QMenu_MenuItem;+10%;{7085DF8F-B849-4936-92F5-826D2401CE24};QMenu_MenuItem;add 1;{A978A5A7-E64E-4535-ACAB-99F71D37C803}" language="Python" name="Property Editing - Add Value" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;subtract 1;{47DF8838-3C9E-446B-B275-808FB44EC301};QMenu_MenuItem;-10%;{6FE97920-DDD6-448A-B13C-A4FD0F4A5307};QMenu_MenuItem;-50%;{C5D78243-CE86-4CBF-B31D-1E62185426F5}" language="Python" name="Property Editing - Subtract Value" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;10;{B8179A9D-20F4-4166-934C-2FBD2AA2F48A};QMenu_MenuItem;5;{78CBD157-4804-4FDD-B4CF-6227CE7A2400};QMenu_MenuItem;1;{287E9279-CFAF-43DE-ABD2-5ABF5967315C};QMenu_MenuItem;0,5;{33732D96-0565-4A60-B80B-01BD6894EE77};QMenu_MenuItem;0,1;{DF6C6730-4AA5-4A84-B3A7-17287AB89852};QMenu_MenuItem;0;{419483EF-5CB4-4D3D-872F-DEF45E32EC39};QMenu_MenuItem;-1;{42A6D1D9-0C77-4842-BBA2-25887623DC5F};QMenu_MenuItem;None;{FCEE01DB-72A2-45A2-AAE8-20969543CACC}" language="Python" name="Property Editing - Set Value" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Camera Inspector (+CTRL to select only)" type="QMenu_Menu">#The following code adds a menu item per camera in the scene to the bottom of the menu 
# which selects the respective light (or inspects it when ctrl key is pressed at the same time)

def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	self = oContext.ThisQMenuObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cameras = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;camera&quot;, &quot;&quot;, True)
	oDummyMenuItem = Application.QMenuGetByName(&quot;MenuItem&quot;,&quot;Dummy_CameraSelector&quot;)
	DummyCode = oDummyMenuItem.Code

	for oCam in Cameras:
		oCamMenuItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		CameraSpecificCode = DummyCode.replace(&quot;CAMNAME&quot;, oCam.FullName)
		oCamMenuItem.Name = oCam.FullName
		oCamMenuItem.Code = CameraSpecificCode #Set the code in the Menu Item we have concatenated above
		self.appendTempMenuItem (oCamMenuItem) #Add the menu item to the list of temporary menu items of this menu</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Light Associate;{50830560-31B5-11D0-82E7-00A0243E268D}:{B9CBDE2A-4730-11D6-80CE-00A0C9ED67BD};QMenu_Menu;Light Inspector (+CTRL to select only);{B091C25C-AE68-4910-8E69-78482B89B5A9};QMenu_Menu;Camera Inspector (+CTRL to select only);{D46E3383-8442-44C2-9520-F175EBC8644E}" language="Python" name="Shading Properties" type="QMenu_Menu">def QMenu_Menu_Execute (  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Orbit Around Selection - Components only;{24B4A05F-A2F1-4672-BFBA-7FB7F4B3DA44};QMenu_MenuItem;Orbit Around Selection;{D2A70824-3256-489E-91D6-810655AB48B4};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Inspect Camera Preferences;{1FDB2BE1-6D33-4767-9728-2361E2D0B7CC}" language="Python" name="Preferences &gt; Tools &gt; Camera" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function!
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Look Through Spotlight" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function!
	self =  oContext.ThisQMenuObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cams = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;Light&quot;, &quot;&quot;, True)
	
	for oCam in Cams:
		if Application.GetValue(oCam.FullName + &quot;.light.Type&quot;) == 2:
			print (oCam.FullName + &quot; is a spotlight&quot;)
			oCamItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
			oCamItem.Name = oCam.FullName

			Code = ('def Script_Execute (oContext):\n\toVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )\n')
			Code+= ('\toView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)\n')
			Code += ('\toVM.SetAttributeValue(&quot;activecamera:&quot; + oView + &quot;\&quot;,&quot;' + oCam.FullName + '&quot;)\n')

			oCamItem.code = Code
			self.appendTempMenuItem (oCamItem)</QMenu_Menu><QMenu_Menu executeCode="True" items="" language="Python" name="Look Through Camera" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function!
	self = oContext.ThisQMenuObject
	self.removeAllTempMenuItems() #Clear the temp menu items so they don't pile up in the menu after subsequent calls
	Cams = Application.ActiveSceneRoot.FindChildren(&quot;&quot;, &quot;Camera&quot;, &quot;&quot;, True)

	for oCam in Cams:
		oCamItem = Application.QMenuCreateObject(&quot;MenuItem&quot;)
		oCamItem.Name = oCam.FullName

		Code = ('def Script_Execute ( oContext ):\n\t')
		Code += ('oVM = Application.Desktop.ActiveLayout.Views.Find( &quot;View Manager&quot; )\n\t')
		Code += ('oView = oVM.GetAttributeValue(&quot;focusedviewport&quot;)\n\t')
		Code += ('oVM.SetAttributeValue(&quot;activecamera:&quot; + oView + &quot;\&quot;,&quot;' + oCam.FullName + '&quot;)\n')

		oCamItem.code = Code
		self.appendTempMenuItem (oCamItem)</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Raycast Select in Shaded Mode;{8EA2A9F2-8B04-460B-A5ED-F8ECC42558C4};QMenu_MenuItem;Raycast Select - Include Backfacing Polygons;{A6BF4677-A82F-4403-8A5E-52958BE8849B};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Inspect Selection Preferences;{021ACE47-19BF-45E9-B6E1-FBCA5E37D9EC}" language="Python" name="Preferences &gt; Tools &gt; Polygon" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Extrude duplicated Polygons;{67EF479D-644C-46F8-ABDF-50A4F4EE007A};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Inspect Duplicate Preferences;{CFBF83CE-994F-461F-AF45-842F5124604E}" language="Python" name="Preferences &gt; Commands &gt; Duplicate Options" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Blend;{50830560-31B5-11D0-82E7-00A0243E268D}:{8BD3C851-183C-11D3-A979-00A024190119};Command;Curve Fillet;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9E-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9F-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Merge;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC8D-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curves (multiple)" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Log Messages;{85D6F9D5-F4AD-4C82-842B-3BE4A636DB7F};QMenu_MenuItem;Log Verbose Messages;{265F835B-296D-4B1D-91F5-F7FB9D3BB55F};QMenu_MenuItem;Log Messages Real-Time;{3F66254A-42BD-4394-A60F-386B6CB3FBC4};QMenu_MenuItem;Show Hyperlinks;{CC771794-20AB-41C4-86ED-50280FE4F83A}" language="Python" name="Preferences &gt; Scripting" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Edit QMenus;{CF054309-7D8D-4DB1-A3E6-463DEC3F15C2};QMenu_MenuItem;QPop enabled;{E6CD131B-6960-4815-9601-A6201AFB5E02}" language="Python" name="Preferences &gt;  QMenu" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Curve Inverse;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC72-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Open/Close;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC89-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Shift;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC74-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Curve Clean;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA6-F6B6-11D2-AC7E-00A02485CECB};Command;Raise Nurbs Curve Degree;{50830560-31B5-11D0-82E7-00A0243E268D}:{8C80C39D-F376-45DD-BE99-510CD7820EB3};Command;Curve Reparameterize;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC7C-F6B6-11D2-AC7E-00A02485CECB};Command;Set Curve Knot Multiplicity;{50830560-31B5-11D0-82E7-00A0243E268D}:{F296A100-1154-43B6-A647-F083A5A2E592};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Curve Offset;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC92-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Fit;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA8-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Curve" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Duplicate;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2B59DF2-9C38-11D3-8106-00A0C9AC19A9};Command;Clone Single;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2B59DF3-9C38-11D3-8106-00A0C9AC19A9};Command;Instantiate;{50830560-31B5-11D0-82E7-00A0243E268D}:{AC8A969A-3858-42B2-9B45-24D973C44360};Command;Duplicate/Instantiate Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{291E04D0-6068-11D1-9987-00A0243F0E60};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Create Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{DBB3A7E0-893D-11D2-B906-00A024C78EE3};Command;Add to Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{DBB3A7E1-893D-11D2-B906-00A024C78EE3};Command;Remove from Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{48F78661-894D-11D2-B906-00A024C78EE3};Command;Create Transform Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{23424001-3DAB-45C7-874E-3B0B1CA1186F};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Create Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{4F80D8D1-1523-11D3-AC99-0090275802BF};Command;CreateModelAndConvertToRef;{50830560-31B5-11D0-82E7-00A0243E268D}:{8A0F3216-D14B-4057-94FF-59D038516AF4};Command;Delete Model from Object;{50830560-31B5-11D0-82E7-00A0243E268D}:{8FCE53A1-FC5A-4F36-AC4D-30F0041FE013};Command;Select Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{C973C090-1FAB-11D3-8BE6-00AA006130EF}" language="Python" name="Edit Selection 1" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Remove Transform Group;{50830560-31B5-11D0-82E7-00A0243E268D}:{B8ECB928-8AA6-4F73-8698-C50F1AFC0547}" language="Python" name="Edit Transform Groups" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Info Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{4BDCDC62-E18E-11D3-8079-00A0C9ED67BD};Command;Open Transient Explorer;{50830560-31B5-11D0-82E7-00A0243E268D}:{C80E3C80-3D4E-44BF-803C-BD0EAD5B6B6F};Command;Open Attachments;{50830560-31B5-11D0-82E7-00A0243E268D}:{F9250A38-F848-11D4-BEAF-00A0C982DDD4};Command;Inspect Kinematics;{50830560-31B5-11D0-82E7-00A0243E268D}:{FAD01101-9132-11D3-B4A7-009027BC38D5};Command;Open Animation Editor on Kinematics;{50830560-31B5-11D0-82E7-00A0243E268D}:{E1336909-1FE2-11D5-BCEE-00D0B719022B};QMenu_MenuItem;Inspect Materials...;{A75BA2A0-4388-404C-9397-BE6F3D1C1F8C};Command;Last Operator in Stack;{50830560-31B5-11D0-82E7-00A0243E268D}:{CBC44EA0-5121-11D4-BC98-00D0B719022B}" language="Python" name="Edit Selection 2" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Invert All Normals;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC71-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Clean;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9D-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Reparameterize;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC7D-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Shift;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC73-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Swap;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC77-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Trim by Projection;{50830560-31B5-11D0-82E7-00A0243E268D}:{A28F1C4F-54B1-4956-8196-F61C500107E6};Command;Delete Trim;{50830560-31B5-11D0-82E7-00A0243E268D}:{3865C0FE-3A22-4B99-854A-7E02F1AD6833};Command;Continuity Manager;{50830560-31B5-11D0-82E7-00A0243E268D}:{38B826F4-06F5-11D3-B802-00A0243E3694};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Nurbs to Mesh;{50830560-31B5-11D0-82E7-00A0243E268D}:{4B18EA12-8050-11D4-80CB-001083346722};Command;Surface Fit;{50830560-31B5-11D0-82E7-00A0243E268D}:{37B8F9C1-0404-11D4-A9CC-009027BC65D7};Command;Curve Extract;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC99-F6B6-11D2-AC7E-00A02485CECB};Command;Curve Project;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA2-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Surface" type="QMenu_Menu">def QMenu_Menu_Execute(  oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Draw Cubic Curve by CVs;{5AA21D82-E05A-418F-A205-99C015A8D583};QMenu_MenuItem;Draw Cubic Curve by Bezier-Knots;{C909D037-3598-47C4-95D3-B19768D481B5};QMenu_MenuItem;Draw Cubic Curve By Knot-Points;{78DA47C8-EDD0-4793-A3B5-1F3CF0E85633};QMenu_MenuItem;Draw Linear Curve;{2E1840F0-B7B9-4F28-BDB0-2C0F43C4A8B9};Command;Sketch Curve Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{126FCF21-A7CB-11D1-A8FE-00A024190119};QMenu_MenuItem;Create Empty Curve;{DC2C9C5E-C5CD-4C94-8706-315FEE107B2E};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Curve Arc;{50830560-31B5-11D0-82E7-00A0243E268D}:{96A34F30-4717-11D0-B2A9-00A024C79287};Command;Curve Circle;{50830560-31B5-11D0-82E7-00A0243E268D}:{7B621D10-4717-11D0-B2A9-00A024C79287};Command;Curve Spiral;{50830560-31B5-11D0-82E7-00A0243E268D}:{96A34F31-4717-11D0-B2A9-00A024C79287};Command;Curve Square;{50830560-31B5-11D0-82E7-00A0243E268D}:{6DE4A0E0-C18B-11D0-8A0D-080036F3CC02};Command;Curve Text;{50830560-31B5-11D0-82E7-00A0243E268D}:{D55B689F-632E-4B5B-9068-0931BCE4469A};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Surface Cone;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F35-147A-11D0-AEA8-B4872D4679CD};Command;Surface Cube;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F32-147A-11D0-AEA8-B4872D4679CD};Command;Surface Cylinder;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F34-147A-11D0-AEA8-B4872D4679CD};Command;Surface Disc;{50830560-31B5-11D0-82E7-00A0243E268D}:{30C4A3F0-D6C8-11D0-91C3-00AA00629814};Command;Surface Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F31-147A-11D0-AEA8-B4872D4679CD};Command;Surface Sphere;{50830560-31B5-11D0-82E7-00A0243E268D}:{32E56F33-147A-11D0-AEA8-B4872D4679CD};Command;Surface Torus;{50830560-31B5-11D0-82E7-00A0243E268D}:{360439C6-1477-11D0-AEA8-B4872D4679CD}" language="Python" name="Create Primitives - NURBS" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):	#Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Mesh Cone;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC1-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Cube;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC2-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Cylinder;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC3-7B9E-11D0-BDED-00A0243E36A8};QMenu_MenuItem;Mesh Disc;{413D3E0B-B393-4AD1-892B-BA2CCF6BFFC4};Command;Mesh Grid;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC7-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Sphere;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCC-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Torus;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCA-7B9E-11D0-BDED-00A0243E36A8};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Create Planar Mesh Text;{50830560-31B5-11D0-82E7-00A0243E268D}:{890D5A80-024B-4111-8751-26D7E3CA2611};Command;Create Solid Mesh Text;{50830560-31B5-11D0-82E7-00A0243E268D}:{519192B2-AD24-4AE1-BAA3-670D51B8F3F3};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Mesh Dodecahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC5-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Icosahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC8-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Octahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DC9-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Tetrahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{F0B32DCE-7B9E-11D0-BDED-00A0243E36A8};Command;Mesh Rhombicosidodecahedron;{50830560-31B5-11D0-82E7-00A0243E268D}:{2A7DDEF2-7560-11D5-80B0-00A0C9ED67BD};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Create Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{4F80D8D1-1523-11D3-AC99-0090275802BF};Command;CreateRefModel;{50830560-31B5-11D0-82E7-00A0243E268D}:{5C8C36E2-CE50-4631-BB8C-0FC04E1F888E};Command;Import Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{84C70740-7C0A-11D3-8907-00A024EE6238};Command;Import Ref Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{D573924F-F058-46FA-BEE8-321150C3516A};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Null Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{B99F19D6-EEC9-11D3-807C-00A0C9ED67BD}" language="Python" name="Create Primitives - Polygons" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Create Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{DE557530-8B9A-11D2-A93C-00A024190119};Command;Create Non-Overlapping Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{CB81155F-6500-11D5-80AE-00A0C9ED67BD};Command;Add to Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{94172750-8BC8-11D2-A93C-00A024190119};Command;Remove from Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{94172751-8BC8-11D2-A93C-00A024190119}" language="Python" name="Createt Cluster" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Insert Knot Curve;{092101B2-D113-40C0-A554-6C8EAD8EE07D};Command;Surface Snip;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0B65CE0-470D-11D4-A9D6-009027BC65D7}" language="Python" name="Edit NURBS Surface Isoline" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Remove Knot Curve;{01314EF5-504E-467F-A55B-CD5549A48119};Command;Surface Snip;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0B65CE0-470D-11D4-A9D6-009027BC65D7}" language="Python" name="Edit NURBS Surface Knot Curve" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Surface Extend to Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9C-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Surface Boundary" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Surface Swap;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC77-F6B6-11D2-AC7E-00A02485CECB}" language="Python" name="Edit NURBS Subsurface" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Proportional Transform Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{FA9493C0-0A22-41F4-8980-6E63AD875E0B};Command;Tweak Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{0D41FF0C-8AF4-4E18-9C1B-83277ACF12EF};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Surface Stitch;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9B-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Open/Close;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC88-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Extend to Curve;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BC9C-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Delete Trim;{50830560-31B5-11D0-82E7-00A0243E268D}:{3865C0FE-3A22-4B99-854A-7E02F1AD6833}" language="Python" name="Edit NURBS Surface (general)" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="" language="Python" name="Edit Shading Properties" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Surface Intersect;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA7-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Surface Blend;{50830560-31B5-11D0-82E7-00A0243E268D}:{1AB939E0-19B9-11D3-A979-00A024190119};Command;Surface Fit;{50830560-31B5-11D0-82E7-00A0243E268D}:{37B8F9C1-0404-11D4-A9CC-009027BC65D7};Command;Surface Fillet;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA3-F6B6-11D2-AC7E-00A02485CECB};Command;Surface Merge;{50830560-31B5-11D0-82E7-00A0243E268D}:{2861BCA5-F6B6-11D2-AC7E-00A02485CECB};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Assemble Surface Mesh;{50830560-31B5-11D0-82E7-00A0243E268D}:{BC91E541-DFCB-11D3-B830-009027BC6587};Command;Snap Boundary;{50830560-31B5-11D0-82E7-00A0243E268D}:{D99A8CC2-1A89-11D3-B803-00A0243E3694}" language="Python" name="Edit NURBS Surfaces (multiple)" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Unhide All Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{7BC3B51D-8FCA-4546-B99F-BDC4AE964409};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02};Command;Grow Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{6218A21F-1147-11D4-A89D-00C04F8EDF15};Command;Shrink Selection;{50830560-31B5-11D0-82E7-00A0243E268D}:{69D3398B-73E6-4AB1-B3E5-7108216EF805};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Convert Selection To Points;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2E6486C-396D-47B1-9080-D7CF59FEB90F};Command;Convert Selection To Edges;{50830560-31B5-11D0-82E7-00A0243E268D}:{CA96B5B1-0B8E-4E7C-947A-F2346E490C11};Command;Convert Selection To Polygons;{50830560-31B5-11D0-82E7-00A0243E268D}:{6199BF10-3CB7-409C-9FE9-360A023679C3};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Select Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6ED1DB7-45B1-11D6-80CD-00A0C9ED67BD};Command;Select Parallel Edge Loop;{50830560-31B5-11D0-82E7-00A0243E268D}:{7C6E8253-85C0-4020-989E-774D582FE9D8}" language="Python" name="Edit Polymesh Components" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02}" language="Python" name="Edit NURBS Surface Components" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Invert Selection Using Filter;{50830560-31B5-11D0-82E7-00A0243E268D}:{558B6839-03E9-11D3-B89E-080036F3CC02}" language="Python" name="Edit NURBS Curve Components" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Camera Perspective;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6D026A5-A168-11D0-8478-00A024C7919C};Command;Camera Orthographic;{50830560-31B5-11D0-82E7-00A0243E268D}:{56566A02-C793-11D3-8075-00A0C9ED67BD};Command;Camera Telephoto;{50830560-31B5-11D0-82E7-00A0243E268D}:{56566A03-C793-11D3-8075-00A0C9ED67BD};Command;Camera Wide Angle;{50830560-31B5-11D0-82E7-00A0243E268D}:{56566A04-C793-11D3-8075-00A0C9ED67BD};Command;GetPrimStereoCamera;{6BCADE59-5FB4-11D2-8D78-00A0C982A75A}:{AB47488F-0D94-72DD-A4C9-60C3ADC282D4};Command;More Cameras...;{50830560-31B5-11D0-82E7-00A0243E268D}:{3F664662-8B10-11D3-8104-00A0C9AC19A9}" language="Python" name="New Camera" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Make Model Local;{50830560-31B5-11D0-82E7-00A0243E268D}:{07EE49C0-625A-11D4-B98D-009027BC3E07};Command;Export Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{2EF09090-776E-11D3-8902-00A024EE6238};Command;Update Referenced Model;{50830560-31B5-11D0-82E7-00A0243E268D}:{4DDEA150-37CF-11D4-B986-009027BC3E07};QMenu_Menu;Referenced Model Resolution;{27998E95-DFC9-4451-A30F-2FF59E094335}" language="Python" name="Edit Model" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;SetResolutionOfRefModels_High;{50830560-31B5-11D0-82E7-00A0243E268D}:{EAFFC3D2-73C5-4FA9-A5A3-1E393E227F20};Command;SetResolutionOfRefModels_Low;{50830560-31B5-11D0-82E7-00A0243E268D}:{70D86E33-4325-4459-92C8-98EEB39FE440};Command;SetResolutionOfRefModels_Medium;{50830560-31B5-11D0-82E7-00A0243E268D}:{AE926699-3F0A-4673-9B54-048E7B8CC623};Command;SetResolutionOfRefModels_OffLoaded;{50830560-31B5-11D0-82E7-00A0243E268D}:{DEA476D9-A4E7-4616-A1BA-87D3E0ABA989}" language="Python" name="Referenced Model Resolution" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Architectural Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{26C8DCAD-1B9A-4329-A88B-5BEFA9B488A9};Command;Blinn Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{F18D6DC7-ED03-11D2-AA71-00AA0068D2C0};Command;Car Paint Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{27343B25-18DE-4561-A76B-DE5BB7D59236};Command;Cook-Torrance Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{F18D6DC8-ED03-11D2-AA71-00AA0068D2C0};Command;Constant Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{274838EB-9BC1-11D4-86AE-00E08100004B};Command;Lambert Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{F18D6DC6-ED03-11D2-AA71-00AA0068D2C0};Command;Phong Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{E2E787A1-ED03-11D2-AA71-00AA0068D2C0};Command;Strauss Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{F18D6DC5-ED03-11D2-AA71-00AA0068D2C0};Command;More Shaders...;{50830560-31B5-11D0-82E7-00A0243E268D}:{248AB1C1-F403-11D2-AA76-00AA0068D2C0}" language="Python" name="Assign Shader (general)" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;ICE Particle Volume Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{A2833393-63A4-4C0E-9FA7-380C6E54FDDA};Command;Fluid Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{5BC81201-E49B-11D3-B491-00A0248F9397};Command;Blob Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{6AE9103B-4B3C-11D3-A8FC-00C04F8EDEB9};Command;Sparks Shader;{50830560-31B5-11D0-82E7-00A0243E268D}:{6AE9103A-4B3C-11D3-A8FC-00C04F8EDEB9}" language="Python" name="Assign Shader (pointcloud)" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Light Point;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6D026A1-A168-11D0-8478-00A024C7919C};Command;Light Spot;{50830560-31B5-11D0-82E7-00A0243E268D}:{A6D026A2-A168-11D0-8478-00A024C7919C};Command;Light Sun;{50830560-31B5-11D0-82E7-00A0243E268D}:{224D88B3-2388-11D3-ADDE-00A02485CECB};Command;Light Neon;{50830560-31B5-11D0-82E7-00A0243E268D}:{224D88B1-2388-11D3-ADDE-00A02485CECB};Command;Light Box;{50830560-31B5-11D0-82E7-00A0243E268D}:{224D88B2-2388-11D3-ADDE-00A02485CECB};Command;More Lights...;{50830560-31B5-11D0-82E7-00A0243E268D}:{393C6AD1-E6B4-11D2-A02C-0000F875DF68};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;StandIn;{50830560-31B5-11D0-82E7-00A0243E268D}:{43F95D18-8A58-4B55-B954-466CAD715A3D};Command;ArnoldStandIn;{6BCADE59-5FB4-11D2-8D78-00A0C982A75A}:{123CAC2D-2756-E3A8-DE15-65F792F32527};Command;GeoShader;{50830560-31B5-11D0-82E7-00A0243E268D}:{9430A5BD-D5D2-4206-BC18-D326639771FF}" language="Python" name="Create Primitives - Lighting and Rendering" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Remove Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{94172752-8BC8-11D2-A93C-00A024190119};Command;Copy Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{98E8A830-7DD0-11D4-9C8A-00D0B719049E};Command;Select Members/Components;{50830560-31B5-11D0-82E7-00A0243E268D}:{881EA660-0E0B-11D3-B8A0-080036F3CC02};Command;Polygon Cluster Visibility Property;{50830560-31B5-11D0-82E7-00A0243E268D}:{8E214145-C3EF-4554-A619-22373842A455};QMenu_MenuItem;Merge Clusters with same Material;{2D070902-A2E5-4E22-B860-CF0AB4FFF170}" language="Python" name="Edit Cluster" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Remove from Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{94172751-8BC8-11D2-A93C-00A024190119};Command;Add to Cluster;{50830560-31B5-11D0-82E7-00A0243E268D}:{94172750-8BC8-11D2-A93C-00A024190119}" language="Python" name="Edit Cluster Membership" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_Menu;Look Through Spotlight;{BECF4D3F-1A62-4971-864F-854424F8BE1E};QMenu_Menu;Look Through Camera;{EDB04A5A-ACE2-4981-8CD2-8952F49FED7F}" language="Python" name="Look through..." type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="Command;Open XSI Explorer;{50830560-31B5-11D0-82E7-00A0243E268D}:{3C732F45-E90A-4662-857F-152C2B2EB59C};QMenu_MenuItem;Open Scene Search;{E4EFCB21-1E9D-4447-BB55-4C5AEE4429F1};QMenu_MenuItem;Open Cache Manager;{639C98AA-5F6F-42DB-9A46-ABECCD3BA490};QMenu_MenuItem;Open External Files Manager;{C65193A7-E078-42DF-90DC-2290E407221F};QMenu_MenuItem;Open Browser;{4D5A0D4A-28A7-4681-A473-7D92FEF52D12};QMenu_MenuItem;Open Scene Debugger;{441AA4B0-9841-4A6A-9DF3-9B962D9181C4};Command;Open QMenu Editor;{6BCADE59-5FB4-11D2-8D78-00A0C982A75A}:{96107F46-7337-7C1E-9617-C2D0D36CC419}" language="Python" name="Editors and Managers - General" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Open Texture Editor;{09D0CD23-5E2A-4848-8DEC-F30F285BD84E};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Render Region Tool;{50830560-31B5-11D0-82E7-00A0243E268D}:{A281D992-5A0F-473B-843A-BAE619AE0B09};QMenu_MenuItem;Open Render Manager;{0F97BF38-6CAC-484E-B44F-FC5637BAD708};QMenu_MenuItem;Open Material Manager;{4BABAB24-AAB4-47EA-BE2B-EB601DEC8F21};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};Command;Scene Render Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{E0EBD944-DF9E-485F-9AB5-019FBA1D28A2};Command;Inspect Current Pass Renderer Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{DC9A9937-875C-46E7-83F4-1ACFDBEB4275};Command;Inspect Viewport Render Region Options;{50830560-31B5-11D0-82E7-00A0243E268D}:{5AF1698E-8855-4FC4-B10A-958CB6BEC446};Command;Open Rendering Preferences;{6BCADE59-5FB4-11D2-8D78-00A0C982A75A}:{61CD59E6-1C6F-FAF5-2A1A-F64A414ED2BA}" language="Python" name="Editors &amp; Managers - Rendering" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu><QMenu_Menu executeCode="False" items="QMenu_MenuItem;Add To Group;{21428902-B998-4DEA-8514-0496A63BB480};QMenu_MenuItem;Remove From Group;{66AA6568-1CF7-49EE-ACEE-D6A83104CF27};QMenuSeparator;NewSeparator;{267A32D5-1410-470B-A150-24A9869A325C};QMenu_MenuItem;Remove Group;{B46A7EEE-61F9-4EFC-96D0-638C3572E63B}" language="Python" name="Edit Groups 1" type="QMenu_Menu">def QMenu_Menu_Execute( oContext ):  #Don't rename this function
	#Add your script code here
	pass</QMenu_Menu></QMenu_Menus><QMenu_MenuSets><QMenu_MenuSet AContexts="Polymeshes (multiple);Polymesh (or components);NURBS_Curves (multiple);NURBS_Curve (or components);NURBS_Surfaces (multiple);NURBS_Surface (or components);Transform Group;Selection is Empty" AMenus="Edit Polymeshes (multiple);Edit Polymesh (general);Edit NURBS Curves (multiple);Edit NURBS Curve (general);Edit NURBS Surfaces (multiple);Edit NURBS Surface (general);Edit Transform Groups;Create Primitives - NURBS" BContexts="Any Object;Group;Polymesh_Components;NURBS_Curve_Components;NURBS_Surface_Components" BMenus="Edit Selection 1;Edit Groups 1;Edit Polymesh Components;Edit NURBS Curve Components;Edit NURBS Surface Components" CContexts="Model;Any Object;Clusters &amp; Components;Cluster;Components" CMenus="Edit Model;Edit Selection 2;Edit Cluster Membership;Edit Cluster;Createt Cluster" DContexts="Polymesh (single);Polymesh_Polygons;Polymesh_Edges;Polymesh_Points;NURBS_Curve (single);NURBS_Curve_Subcurve;NURBS_Curve_IsoPoint;NURBS_Curve_Knot;NURBS_Surface (single);NURBS_Surface_KnotCurve;NURBS_Surface_Isoline;NURBS_Surface_Boundary;NURBS_Subsurface;Selection is Empty" DMenus="Edit Polymesh;Edit Polymesh Polygons;Edit Polymesh Edges;Edit Polymesh Points;Edit NURBS Curve;Edit NURBS Curve Subcurve;Edit NURBS Curve IsoPoint;Edit NURBS Curve Knot;Edit NURBS Surface;Edit NURBS Surface Knot Curve;Edit NURBS Surface Isoline;Edit NURBS Surface Boundary;Edit NURBS Subsurface;Create Primitives - Polygons" name="Modeling" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Shadeable Geo or Pointcloud;Default (always True)" AMenus="Assign Shader (general);Create Primitives - Lighting and Rendering" BContexts="Shadeable Geo or Pointcloud" BMenus="Edit Shading Nodes" CContexts="Components;Default (always True)" CMenus="Createt Cluster;Editors &amp; Managers - Rendering" DContexts="Pointcloud;Default (always True)" DMenus="Assign Shader (pointcloud);Shading Properties" name="Lighting and Shading" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Property Editing - Set Value" BContexts="Default (always True)" BMenus="Property Editing - Add Value" CContexts="Default (always True)" CMenus="Property Editing - Subtract Value" DContexts="Default (always True)" DMenus="None" name="Property Editing" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="Set View to..." BContexts="Default (always True)" BMenus="Display Modes" CContexts="Default (always True)" CMenus="Editors and Managers - General" DContexts="Default (always True)" DMenus="Look through..." name="View Editing" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="Default (always True)" AMenus="None" BContexts="Default (always True)" BMenus="Preferences &gt; Scripting" CContexts="Default (always True)" CMenus="None" DContexts="Default (always True)" DMenus="None" name="Scripting" type="QMenu_MenuSet"/><QMenu_MenuSet AContexts="" AMenus="" BContexts="" BMenus="" CContexts="" CMenus="" DContexts="" DMenus="" name="Empty Menu Set" type="QMenu_MenuSet"/></QMenu_MenuSets><QMenu_MenuDisplayContexts><QMenu_MenuDisplayContext language="Python" name="Polymesh (or components)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Type = oContext.Types[0]
	ComponentParentType = oContext.ComponentParentTypes[0]
	if Type == &quot;polymsh&quot; or ComponentParentType == &quot;polymsh&quot;:  #Is the first selected object a Polymesh?
		return True
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Default (always True)" scandepth="0" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	return True	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Points" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (oContext.Types[0] == &quot;pntSubComponent&quot;):
		if oContext.ComponentParentTypes[0] == &quot;polymsh&quot;: #Is the parent of the selected component(s) a polymesh? (could be a curve too)
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Edges" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ):  #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object an edge of on a Polymesh?
	if oContext.Types[0] == &quot;edgeSubComponent&quot;: 
		return True	#This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Polygons" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a polygont on a Polymesh?
	if oContext.Types[0] == &quot;polySubComponent&quot;:
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Subcurve" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a subcurve of a NURBS curve list?
	if Types[0] == &quot;subcrvSubComponent&quot;: 	
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymeshes (multiple)" scandepth="2" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (len(Types) &gt; 1): #Is something selected?
		if Types[0] == &quot;polymsh&quot; and Types[1] == &quot;polymsh&quot;: #Are the first two selected objects polymeshes?
			return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh (single)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if oContext.Types[0] == &quot;polymsh&quot;:  #Is the first selected object a Polymesh?
		return True
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve (single)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute ( oContext ): #This function must not be renamed!
	Types = oContext.Types
	#Is the first selected object a NURBS curvelist?
	if Types[0] == &quot;crvlist&quot;: 
		return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve (or components)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.ComponentParentTypes
	if Types[0] == &quot;crvlist&quot;:  #Is the first selected object a curve list?
		return True
	if ((Types[0] == &quot;knotSubComponent&quot;) or (Types[0] == &quot;isopntSubComponent&quot;) or (Types[0] == &quot;pntSubComponent&quot;) or (Types[0] ==&quot;subcrvSubComponent&quot;)):
		if ComponentParentTypes[0] == &quot;crvlist&quot;:  #Is the parent of the selected component(s) a NURBS curve?
			return True								
	return False  #This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Point" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.ComponentParentTypes
	if Types[0] == &quot;pntSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;:  #Is the parent of the selected component(s) a curve list?
			return True								
	return False  #This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_IsoPoint" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): 	#This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.ComponentParentTypes
	if Types[0] == &quot;isopntSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;:	#Is the parent of the selected component(s) a curve list?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Knot" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	ComponentParentTypes = oContext.ComponentParentTypes
	if Types[0] == &quot;knotSubComponent&quot;:
		if ComponentParentTypes[0] == &quot;crvlist&quot;: 		#Is the parent of the selected component(s) a curve list?
			return True								
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curves (multiple)" scandepth="2" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if (len( Types ) &gt; 1): #Is more than one obj selected?
		if Types[0] == &quot;crvlist&quot; and Types[1] == &quot;crvlist&quot;: #Are the first two selected objects curves?
			return True #This function must return a boolean!
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="JScript" name="_Test_Jscript_DisplayContext" scandepth="0" type="QMenu_MenuDisplayContext">function QMenuContext_Execute( oContext ) //This function must not be renamed!
{
	LogMessage(oContext.ThisQMenuObject.Name);
	classNames = oContext.Types.toArray();
	LogMessage(classNames)
	//Application.LogMessage(oContext.ComponentClassNames)
	//Application.LogMessage(oContext.ComponentParents)
	//Application.LogMessage(oContext.ComponentParentTypes)
	//Application.LogMessage(oContext.ComponentParentClassNames)
	return true	//This function must return a boolean
}</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="VBScript" name="_Test_VBScript_DisplayContext" scandepth="0" type="QMenu_MenuDisplayContext">Function QMenuContext_Execute(oContext) 'This function must not be renamed!
	LogMessage(oContext.ThisQMenuObject.Name)
	classNames = oContext.ClassNames
	'classNames = oContext.getSelectionClassNames()
	LogMessage classNames(0)
	'Application.LogMessage(ComponentClassNames)
	'Application.LogMessage(ComponentParents)
	'Application.LogMessage(ComponentParentTypes)
	'Application.LogMessage(ComponentParentClassNames)
	QMenuContext_Execute =  True	'This function must return a boolean
 end Function</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Transform Group" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;TransfoGroup&quot;:	
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface (single)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;surfmsh&quot;:
		return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_Isoline" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;isolinevSubComponent&quot; or Types[0] == &quot;isolineuSubComponent&quot;:
		return True	
	return false #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Subsurface" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;subsrfSubComponent&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_KnotCurve" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;knotcrvvSubComponent&quot; or Types[0] == &quot;knotcrvuSubComponent&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_Point" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;pntSubComponent&quot; and oContext.ComponentParentTypes[0] == &quot;surfmsh&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_Knot" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if (oContext.Types[0] == &quot;knotSubComponent&quot;) and (oContext.ComponentParentTypes[0] == &quot;surfmsh&quot;) :
		return True #This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface (or components)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if Types[0] == &quot;surfmsh&quot; or oContext.ComponentParentTypes[0] == &quot;surfmsh&quot;:
		return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surfaces (multiple)" scandepth="2" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Types = oContext.Types
	if len(Types) &gt; 1:
		if (Types[0] == &quot;surfmsh&quot;) and (Types[1] == &quot;surfmsh&quot;):
			return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_Boundary" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] ==  &quot;bndrySubComponent&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Any Object" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if len(oContext.ClassNAmes) &gt; 0:
		#Application.LogMessage (oContext.ClassNames)
		#Application.LogMessage (oContext.X3DObjects[0])
		#Application.LogMessage (oContext.Types[0])
		firstClassName = oContext.ClassNames[0]
		allowedClassNames = (&quot;X3DObject&quot;,&quot;LightRig&quot;,&quot;CameraRig&quot;,&quot;Model&quot;,&quot;Group&quot;)
		if firstClassName in allowedClassNames:
			return True
	return False #This function must return a booleans</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Sel = Application.Selection
	if Sel.Count &gt; 0:
		ObjectTypes = [&quot;surfmsh&quot;,&quot;polymsh&quot;,&quot;crvlist&quot;,&quot;lattice&quot;,&quot;pointcloud&quot;,&quot;hair&quot;]
		if oContext.ComponentParentTypes[0] in ObjectTypes:
			return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Polymesh_Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	ComponentParentType = oContext.ComponentParentTypes[0]
	if ComponentParentType == &quot;polymsh&quot;:  #Is the first selected object a Polymesh?
		return True
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Surface_Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.ComponentParentTypes[0] == &quot;surfmsh&quot;:
		return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="NURBS_Curve_Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.ComponentParentTypes[0] == &quot;crvlist&quot;:
		return True		
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Null" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;null&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Bone" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;bone&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Pointcloud" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;pointcloud&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Arc" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;arc&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Spiral" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;spiral&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Circle" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;circle&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Square" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;square&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Cone" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;cone&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Cube" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;cube&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Cylinder" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;cylinder&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Disc" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;disc&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Grid" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;grid&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Sphere" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;sphere&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="IMPLICIT_Torus" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;torus&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Wave" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;wave&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_VolumeDeform" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;volume_deform&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Attractor" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;attractor&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Drag" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;drag&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Eddy" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;eddy&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Fan" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;fan&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Gravity" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;gravity&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Toric Force" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;Toric_Force&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Turbulence" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;turbulence&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Vortex" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;vortex&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="CTRL_OBJ_Wind" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;wind&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Lattice" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;lattice&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Stand-in" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;standin&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Geometry Shader Primitive" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;GeoShader&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Camera" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;camera&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Camera_Interest" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;CameraInterest&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Camera_Root" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;CameraRoot&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Light (any)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;light&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Stand-in (Arnold)" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	try:
		for prop in Application.Selection[0].Properties:
			if prop.Type == &quot;ArnoldStandInProp&quot;:
				return True	
	except:
		return False
	return False #This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Chain Effector" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;eff&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Chain Root" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;root&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Model" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;#model&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Shadeable Geo or Pointcloud" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	Type = oContext.Types[0]
	#print Type
	shadeableTypes = [&quot;polymsh&quot;,&quot;surfmsh&quot;,&quot;pointcloud&quot;,&quot;subsrfSubComponent&quot;,&quot;polySubComponent&quot;,&quot;poly&quot;,&quot;subsrf&quot;,&quot;hair&quot;]
	if Type in shadeableTypes :  
		return True
	return False	#This function must return a boolean!</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Cluster" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.ClassNames[0] == &quot;Cluster&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Clusters &amp; Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	#print oContext.ClassNames
	#print oContext.Types
	#print oContext.ComponentParentTypes
	ValidTypeFound = False
	Sel = Application.Selection
	if Sel.Count &gt; 0:
		AllowedComponentParentTypes = [&quot;surfmsh&quot;,&quot;polymsh&quot;,&quot;crvlist&quot;,&quot;lattice&quot;,&quot;pointcloud&quot;,&quot;hair&quot;]
		for Type in oContext.ComponentParentTypes:
			if Type in AllowedComponentParentTypes:
				ValidTypeFound = True
				break

		if ValidTypeFound and &quot;Cluster&quot; in oContext.ClassNames :
			return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Hair" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;hair&quot;:
		return True
	return False	#This function must return a boolean</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Selection is Empty" scandepth="0" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if Application.Selection.Count == 0:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Material" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;material&quot;:
		return True	#This function must return a boolean
	return false</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Property" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.ClassNames[0] == &quot;Property&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Custom Property" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.ClassNames[0] == &quot;CustomProperty&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Layer" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;Layer&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Pass" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	#print oContext.Types[0]
	if oContext.Types[0] == &quot;Pass&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Parameter" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	#print oContext.ClassNames[0]
	if oContext.Types[0] == &quot;Parameter&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Partition" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;Partition&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Texture Support" scandepth="0" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if oContext.Types[0] == &quot;Texture Support&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Group" scandepth="0" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	print(oContext.Types[0])
	if oContext.Types[0] == &quot;#Group&quot;:
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext><QMenu_MenuDisplayContext language="Python" name="Hair Components" scandepth="1" type="QMenu_MenuDisplayContext">def QMenuContext_Execute( oContext ): #This function must not be renamed!
	if (oContext.Types[0] == &quot;pntSubComponent&quot;) and (oContext.ComponentParentTypes[0] == &quot;hair&quot;):
		return True	#This function must return a boolean
	return False</QMenu_MenuDisplayContext></QMenu_MenuDisplayContexts><QMenuViewSignatures><QMenuViewSignature menuSets="View Editing;Modeling;Lighting and Shading" name="3D Views" signature="Viewer;DS_ChildViewManager;DS_ChildRelationalView;TrayClientWindow;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="Property Editing" name="Property Editor" signature="DSPropertyInspectorPagesArea;Tab;DS_ChildPropertyEditor;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/><QMenuViewSignature menuSets="Scripting" name="Script Editor" signature="ScintillaTabControl;DS_ChildScriptEditor;TrayClientWindow;XSIFloatingView;" type="QMenuViewSignature"/></QMenuViewSignatures><QMenuDisplayEvents/></QMenuComponents>